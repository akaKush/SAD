{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/rocketchat:streamer/client/client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/rocketchat:streamer/client/client.js","filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/rocketchat:streamer/client/client.js","passPerPreset":false,"envName":"development","cwd":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","root":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/rocketchat:streamer/client/client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/rocketchat:streamer/client/client.js"}},"code":"/* globals DDPCommon, EV */\n\n/* eslint-disable new-cap */\nconst NonEmptyString = Match.Where(function (x) {\n  check(x, String);\n  return x.length > 0;\n});\n\nclass StreamerCentral extends EV {\n  constructor() {\n    super();\n    this.instances = {};\n    this.ddpConnections = {}; // since each Streamer instance can provide its own ddp connection, store them by streamer name\n  }\n\n  setupDdpConnection(name, ddpConnection) {\n    // make sure we only setup event listeners for each ddp connection once\n    if (ddpConnection.hasMeteorStreamerEventListeners) {\n      return;\n    }\n\n    ddpConnection._stream.on('message', raw_msg => {\n      const msg = DDPCommon.parseDDP(raw_msg);\n\n      if (msg && msg.msg === 'changed' && msg.collection && msg.fields && msg.fields.eventName && msg.fields.args) {\n        msg.fields.args.unshift(msg.fields.eventName);\n        msg.fields.args.unshift(msg.collection);\n        this.emit.apply(this, msg.fields.args);\n      }\n    }); // store ddp connection\n\n\n    this.storeDdpConnection(name, ddpConnection);\n  }\n\n  storeDdpConnection(name, ddpConnection) {\n    // mark the connection as setup for Streamer, and store it\n    ddpConnection.hasMeteorStreamerEventListeners = true;\n    this.ddpConnections[name] = ddpConnection;\n  }\n\n}\n\nMeteor.StreamerCentral = new StreamerCentral();\nMeteor.Streamer = class Streamer extends EV {\n  constructor(name) {\n    var _superprop_getEmit = () => super.emit,\n        _this;\n\n    let {\n      useCollection = false,\n      ddpConnection = Meteor.connection\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (Meteor.StreamerCentral.instances[name]) {\n      console.warn('Streamer instance already exists:', name);\n      return Meteor.StreamerCentral.instances[name];\n    }\n\n    Meteor.StreamerCentral.setupDdpConnection(name, ddpConnection);\n    super();\n    _this = this;\n    this.ddpConnection = ddpConnection || Meteor.connection;\n    Meteor.StreamerCentral.instances[name] = this;\n    this.name = name;\n    this.useCollection = useCollection;\n    this.subscriptions = {};\n    Meteor.StreamerCentral.on(this.subscriptionName, function (eventName) {\n      if (_this.subscriptions[eventName]) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        _this.subscriptions[eventName].lastMessage = args;\n\n        _superprop_getEmit().call(_this, eventName, ...args);\n      }\n    });\n\n    this.ddpConnection._stream.on('reset', () => {\n      super.emit.call(this, '__reconnect__');\n    });\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  set name(name) {\n    check(name, String);\n    this._name = name;\n  }\n\n  get subscriptionName() {\n    return \"stream-\".concat(this.name);\n  }\n\n  get useCollection() {\n    return this._useCollection;\n  }\n\n  set useCollection(useCollection) {\n    check(useCollection, Boolean);\n    this._useCollection = useCollection;\n  }\n\n  stop(eventName) {\n    if (this.subscriptions[eventName] && this.subscriptions[eventName].subscription) {\n      this.subscriptions[eventName].subscription.stop();\n    }\n\n    this.unsubscribe(eventName);\n  }\n\n  stopAll() {\n    for (let eventName in this.subscriptions) {\n      if (this.subscriptions.hasOwnProperty(eventName)) {\n        this.stop(eventName);\n      }\n    }\n  }\n\n  unsubscribe(eventName) {\n    this.removeAllListeners(eventName);\n    delete this.subscriptions[eventName];\n  }\n\n  subscribe(eventName, args) {\n    let subscribe;\n    Tracker.nonreactive(() => {\n      subscribe = this.ddpConnection.subscribe(this.subscriptionName, eventName, {\n        useCollection: this.useCollection,\n        args\n      }, {\n        onStop: () => {\n          this.unsubscribe(eventName);\n        }\n      });\n    });\n    return subscribe;\n  }\n\n  onReconnect(fn) {\n    if (typeof fn === 'function') {\n      super.on('__reconnect__', fn);\n    }\n  }\n\n  getLastMessageFromEvent(eventName) {\n    const subscription = this.subscriptions[eventName];\n\n    if (subscription && subscription.lastMessage) {\n      return subscription.lastMessage;\n    }\n  }\n\n  once(eventName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    const callback = args.pop();\n    check(eventName, NonEmptyString);\n    check(callback, Function);\n\n    if (!this.subscriptions[eventName]) {\n      this.subscriptions[eventName] = {\n        subscription: this.subscribe(eventName, args)\n      };\n    }\n\n    super.once(eventName, callback);\n  }\n\n  on(eventName) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    const callback = args.pop();\n    check(eventName, NonEmptyString);\n    check(callback, Function);\n\n    if (!this.subscriptions[eventName]) {\n      this.subscriptions[eventName] = {\n        subscription: this.subscribe(eventName, args)\n      };\n    }\n\n    super.on(eventName, callback);\n  }\n\n  emit() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this.ddpConnection.call(this.subscriptionName, ...args);\n  }\n\n};","map":{"version":3,"sources":["packages/rocketchat:streamer/client/client.js"],"names":["NonEmptyString","Match","Where","x","check","String","length","StreamerCentral","EV","constructor","instances","ddpConnections","setupDdpConnection","name","ddpConnection","hasMeteorStreamerEventListeners","_stream","on","raw_msg","msg","DDPCommon","parseDDP","collection","fields","eventName","args","unshift","emit","apply","storeDdpConnection","Meteor","Streamer","useCollection","connection","console","warn","subscriptions","subscriptionName","lastMessage","call","_name","_useCollection","Boolean","stop","subscription","unsubscribe","stopAll","hasOwnProperty","removeAllListeners","subscribe","Tracker","nonreactive","onStop","onReconnect","fn","getLastMessageFromEvent","once","callback","pop","Function"],"mappings":"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","sourcesContent":["/* globals DDPCommon, EV */\n/* eslint-disable new-cap */\n\nconst NonEmptyString = Match.Where(function (x) {\n\tcheck(x, String);\n\treturn x.length > 0;\n});\n\nclass StreamerCentral extends EV {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.instances = {};\n\t\tthis.ddpConnections = {};\t\t// since each Streamer instance can provide its own ddp connection, store them by streamer name\n\n\t}\n\n\tsetupDdpConnection(name, ddpConnection) {\n\t\t// make sure we only setup event listeners for each ddp connection once\n\t\tif (ddpConnection.hasMeteorStreamerEventListeners) {\n\t\t\treturn;\n\t\t}\n\t\tddpConnection._stream.on('message', (raw_msg) => {\n\t\t\tconst msg = DDPCommon.parseDDP(raw_msg);\n\t\t\tif (msg && msg.msg === 'changed' && msg.collection && msg.fields && msg.fields.eventName && msg.fields.args) {\n\t\t\t\tmsg.fields.args.unshift(msg.fields.eventName);\n\t\t\t\tmsg.fields.args.unshift(msg.collection);\n\t\t\t\tthis.emit.apply(this, msg.fields.args);\n\t\t\t}\n\t\t});\n\t\t// store ddp connection\n\t\tthis.storeDdpConnection(name, ddpConnection);\n\n\t}\n\n\tstoreDdpConnection(name, ddpConnection) {\n\t\t// mark the connection as setup for Streamer, and store it\n\t\tddpConnection.hasMeteorStreamerEventListeners = true;\n\t\tthis.ddpConnections[name] = ddpConnection;\n\t}\n}\n\nMeteor.StreamerCentral = new StreamerCentral;\n\nMeteor.Streamer = class Streamer extends EV {\n\tconstructor(name, {useCollection = false, ddpConnection = Meteor.connection } = {}) {\n\t\tif (Meteor.StreamerCentral.instances[name]) {\n\t\t\tconsole.warn('Streamer instance already exists:', name);\n\t\t\treturn Meteor.StreamerCentral.instances[name];\n\t\t}\n\t\tMeteor.StreamerCentral.setupDdpConnection(name, ddpConnection);\n\n\t\tsuper();\n\n\t\tthis.ddpConnection = ddpConnection || Meteor.connection;\n\n\t\tMeteor.StreamerCentral.instances[name] = this;\n\n\t\tthis.name = name;\n\t\tthis.useCollection = useCollection;\n\t\tthis.subscriptions = {};\n\n\t\tMeteor.StreamerCentral.on(this.subscriptionName, (eventName, ...args) => {\n\t\t\tif (this.subscriptions[eventName]) {\n\t\t\t\tthis.subscriptions[eventName].lastMessage = args;\n\t\t\t\tsuper.emit.call(this, eventName, ...args);\n\t\t\t}\n\t\t});\n\n\t\tthis.ddpConnection._stream.on('reset', () => {\n\t\t\tsuper.emit.call(this, '__reconnect__');\n\t\t});\n\t}\n\n\tget name() {\n\t\treturn this._name;\n\t}\n\n\tset name(name) {\n\t\tcheck(name, String);\n\t\tthis._name = name;\n\t}\n\n\tget subscriptionName() {\n\t\treturn `stream-${this.name}`;\n\t}\n\n\tget useCollection() {\n\t\treturn this._useCollection;\n\t}\n\n\tset useCollection(useCollection) {\n\t\tcheck(useCollection, Boolean);\n\t\tthis._useCollection = useCollection;\n\t}\n\n\tstop(eventName) {\n\t\tif (this.subscriptions[eventName] && this.subscriptions[eventName].subscription) {\n\t\t\tthis.subscriptions[eventName].subscription.stop();\n\t\t}\n\t\tthis.unsubscribe(eventName);\n\t}\n\n\tstopAll() {\n\t\tfor (let eventName in this.subscriptions) {\n\t\t\tif (this.subscriptions.hasOwnProperty(eventName)) {\n\t\t\t\tthis.stop(eventName);\n\t\t\t}\n\t\t}\n\t}\n\n\tunsubscribe(eventName) {\n\t\tthis.removeAllListeners(eventName);\n\t\tdelete this.subscriptions[eventName];\n\t}\n\n\tsubscribe(eventName, args) {\n\t\tlet subscribe;\n\t\tTracker.nonreactive(() => {\n\t\t\tsubscribe = this.ddpConnection.subscribe(this.subscriptionName, eventName, { useCollection: this.useCollection, args }, {\n\t\t\t\tonStop: () => {\n\t\t\t\t\tthis.unsubscribe(eventName);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn subscribe;\n\t}\n\n\tonReconnect(fn) {\n\t\tif (typeof fn === 'function') {\n\t\t\tsuper.on('__reconnect__', fn);\n\t\t}\n\t}\n\n\tgetLastMessageFromEvent(eventName) {\n\t\tconst subscription = this.subscriptions[eventName];\n\t\tif (subscription && subscription.lastMessage) {\n\t\t\treturn subscription.lastMessage;\n\t\t}\n\t}\n\n\tonce(eventName, ...args) {\n\t\tconst callback = args.pop();\n\n\t\tcheck(eventName, NonEmptyString);\n\t\tcheck(callback, Function);\n\n\t\tif (!this.subscriptions[eventName]) {\n\t\t\tthis.subscriptions[eventName] = {\n\t\t\t\tsubscription: this.subscribe(eventName, args)\n\t\t\t};\n\t\t}\n\n\t\tsuper.once(eventName, callback);\n\t}\n\n\ton(eventName, ...args) {\n\t\tconst callback = args.pop();\n\n\t\tcheck(eventName, NonEmptyString);\n\t\tcheck(callback, Function);\n\n\t\tif (!this.subscriptions[eventName]) {\n\t\t\tthis.subscriptions[eventName] = {\n\t\t\t\tsubscription: this.subscribe(eventName, args)\n\t\t\t};\n\t\t}\n\n\t\tsuper.on(eventName, callback);\n\t}\n\n\temit(...args) {\n\t\tthis.ddpConnection.call(this.subscriptionName, ...args);\n\t}\n};\n"]},"sourceType":"module","hash":"2b326a273c8e413338c921dcb4b2aad69e46b624"}
