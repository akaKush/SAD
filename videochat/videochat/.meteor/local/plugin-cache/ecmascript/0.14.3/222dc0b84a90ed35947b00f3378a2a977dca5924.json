{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/index.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/elmarti:video-chat/lib/index.js","filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/index.js","passPerPreset":false,"envName":"development","cwd":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","root":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/index.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/elmarti:video-chat/lib/index.js"}},"code":"module.export({\n  MeteorVideoChat: () => MeteorVideoChat\n});\n\nconst MeteorVideoChat = (_ref) => {\n  let {\n    Meteor,\n    MeteorClient,\n    Tracker,\n    CoreClient,\n    ReactiveVar,\n    ddp,\n    Streamer\n  } = _ref;\n  const core = new CoreClient({});\n  core.on('emitIceCandidate', iceCandidate => Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({\n    candidate: iceCandidate\n  })));\n  core.on('emitTargetAnswer', answer => Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({\n    answer\n  })));\n  core.on('callInitialized', params => Meteor.call('VideoCallServices/call', params.id, (err, _id) => {}));\n  core.on('endCall', () => {\n    Meteor.VideoCallServices.onTerminateCall();\n  });\n  core.on('answerCall', () => {\n    Meteor.call('VideoCallServices/answer', err => {\n      if (err) {\n        core.events.callEvent(\"error\")(err);\n      }\n\n      Meteor.VideoCallServices.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: true,\n        ringing: false\n      });\n    });\n  });\n  core.on('emitSenderDescription', sessionDescription => Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({\n    offer: sessionDescription\n  })));\n  core.on('error', err => console.log(\"error\", err));\n  const VideoCallServices = new MeteorClient({\n    meteor: Meteor,\n    tracker: Tracker,\n    core,\n    reactiveVar: ReactiveVar,\n    ddp,\n    Streamer\n  });\n  Meteor.VideoCallServices = VideoCallServices;\n  core.on('recieveCall', VideoCallServices.onReceiveCall);\n  core.on('peerConnectionCreated', VideoCallServices.onPeerConnectionCreated);\n\n  Meteor.VideoCallServices.setOnError = function (onError) {\n    CoreClient.prototype.onError = onError;\n  };\n\n  return VideoCallServices;\n};","map":{"version":3,"sources":["packages/elmarti:video-chat/lib/index.js"],"names":["module","export","MeteorVideoChat","Meteor","MeteorClient","Tracker","CoreClient","ReactiveVar","ddp","Streamer","core","on","iceCandidate","VideoCallServices","stream","emit","JSON","stringify","candidate","answer","params","call","id","err","_id","onTerminateCall","events","callEvent","setState","localMuted","remoteMuted","inProgress","ringing","sessionDescription","offer","console","log","meteor","tracker","reactiveVar","onReceiveCall","onPeerConnectionCreated","setOnError","onError","prototype"],"mappings":"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","sourcesContent":["export const MeteorVideoChat = ({\n    Meteor,\n    MeteorClient,\n    Tracker,\n    CoreClient,\n    ReactiveVar,\n    ddp,\n    Streamer\n}) => {\n\n\n        const core = new CoreClient({});\n        core.on('emitIceCandidate', iceCandidate =>\n            Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({ candidate: iceCandidate }))\n        );\n        core.on('emitTargetAnswer', answer =>\n            Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({ answer }))\n        );\n        core.on('callInitialized', (params) =>\n            Meteor.call('VideoCallServices/call', params.id,\n                (err, _id) => {})\n        );\n        core.on('endCall', () => {\n            Meteor.VideoCallServices.onTerminateCall();\n        });\n        core.on('answerCall', () => {\n            Meteor.call('VideoCallServices/answer', err => {\n                if (err) {\n                    core.events.callEvent(\"error\")(err);\n                }\n                Meteor.VideoCallServices.setState({\n                    localMuted: false,\n                    remoteMuted: false,\n                    inProgress: true,\n                    ringing: false\n                });\n            });\n        });\n        core.on('emitSenderDescription', sessionDescription =>\n            Meteor.VideoCallServices.stream.emit('video_message', JSON.stringify({ offer: sessionDescription }))\n        );\n        core.on('error', err => console.log(\"error\", err));\n\n        const VideoCallServices = new MeteorClient({\n            meteor: Meteor,\n            tracker: Tracker,\n            core,\n            reactiveVar: ReactiveVar,\n            ddp,\n            Streamer\n        });\n        Meteor.VideoCallServices = VideoCallServices;\n        core.on('recieveCall', VideoCallServices.onReceiveCall);\n        core.on('peerConnectionCreated', VideoCallServices.onPeerConnectionCreated);\n        Meteor.VideoCallServices.setOnError = function(onError) {\n            CoreClient.prototype.onError = onError;\n        };\n   \n        return VideoCallServices\n        \n    \n};\n"]},"sourceType":"module","hash":"222dc0b84a90ed35947b00f3378a2a977dca5924"}
