{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/elmarti:video-chat/lib/client.js","filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","passPerPreset":false,"envName":"development","cwd":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","root":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/elmarti:video-chat/lib/client.js"}},"code":"module.export({\n  VideoCallServices: () => VideoCallServices\n});\nconst streamHandlers = {\n  handleStreamCallSessionRemoved() {\n    this.callLog = null;\n    this.terminateCall();\n  },\n\n  handleStreamReceivingPhoneCall(msg) {\n    msg.fields._id = msg.id;\n    this.setCallLog(msg.fields);\n    this.stream = new this.Streamer(msg.id);\n    this.stream.on('video_message', this.handleTargetStream.bind(this));\n    this.setState({\n      localMuted: false,\n      remoteMuted: false,\n      inProgress: false,\n      ringing: true\n    });\n    this.onReceiveCall(this.callLog.caller);\n  },\n\n  handleStreamCallOwnCallSessionInitialized(msg) {\n    msg.fields._id = msg.id;\n    this.setCallLog(msg.fields);\n    this.stream = new this.Streamer(msg.id);\n    this.stream.on('video_message', this.handleCallerStream.bind(this));\n  },\n\n  handleStreamCalleeAccept(msg) {\n    if (msg.fields.status === 'ACCEPTED' && this.callLog.caller === this.meteor.userId()) {\n      this.setCallLog(msg.fields);\n      this.core.handleTargetAccept();\n      this.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: true,\n        ringing: false\n      });\n      this.onTargetAccept();\n    }\n  },\n\n  handleStreamCalleeRejected(msg) {\n    if (msg.fields.status === 'REJECTED' && this.callLog.caller === this.meteor.userId()) {\n      this.setCallLog(msg.fields);\n      this.onCallRejected();\n      this.meteor.call(\"VideoCallServices/ackReject\", msg.id);\n    }\n  },\n\n  handleStreamCallFinished(msg) {\n    if (msg.fields.status === 'FINISHED') {\n      if (this.callLog.caller !== this.meteor.userId() || this.callLog.status !== \"REJECTED\") {\n        this.terminateCall();\n      }\n\n      this.callLog = null;\n    }\n  },\n\n  handleStreamUpdates(msg) {\n    if (msg.fields !== undefined) {\n      streamHandlers.handleStreamCalleeAccept.call(this, msg);\n      streamHandlers.handleStreamCalleeRejected.call(this, msg);\n      streamHandlers.handleStreamCallFinished.call(this, msg);\n    }\n  }\n\n}; //jshint esversion: 6\n\nclass VideoCallServices {\n  constructor(args) {\n    let {\n      meteor,\n      tracker,\n      core,\n      reactiveVar,\n      ddp,\n      Streamer\n    } = args;\n    this.meteor = meteor;\n    this.core = core;\n    this.ddp = ddp;\n    this.Streamer = Streamer;\n    this.state = new reactiveVar({\n      localMuted: false,\n      remoteMuted: false,\n      ringing: false,\n      inProgress: false\n    });\n    this.callLog = null;\n    tracker.autorun(() => {\n      this.sub = this.meteor.subscribe('VideoChatPublication');\n    });\n    this.ddp.on('message', this.handleStream.bind(this));\n  }\n\n  setCallLog(fields) {\n    this.callLog = Object.assign({}, this.callLog, fields);\n  }\n  /**\n   * Handle the Video chat specific data in the DDP stream\n   * @param msg {string}\n   */\n\n\n  handleStream(msg) {\n    msg = JSON.parse(msg);\n\n    if (msg.collection === 'VideoChatCallLog' && msg.msg === 'removed' && this.callLog !== null) {\n      streamHandlers.handleStreamCallSessionRemoved.call(this);\n    } else if (msg.collection === 'VideoChatCallLog' && msg.msg === 'added' && msg.fields.target === this.meteor.userId() && msg.fields.status === \"NEW\") {\n      streamHandlers.handleStreamReceivingPhoneCall.call(this, msg);\n    } else if (msg.collection === 'VideoChatCallLog' && msg.msg === 'added' && msg.fields.caller === this.meteor.userId() && msg.fields.status === 'NEW') {\n      streamHandlers.handleStreamCallOwnCallSessionInitialized.call(this, msg);\n    } else if (msg.msg === 'changed' && msg.collection === 'VideoChatCallLog' && msg.fields !== undefined) {\n      streamHandlers.handleStreamUpdates.call(this, msg);\n    }\n  }\n  /**\n   * Handle the stream data for the target user\n   * @param streamData {string}\n   */\n\n\n  handleTargetStream(streamData) {\n    if (typeof streamData === \"string\") {\n      streamData = JSON.parse(streamData);\n    }\n\n    if (streamData.offer) {\n      this.core.handleTargetStream({\n        Direction: \"Target\",\n        Type: 1,\n        data: streamData.offer\n      });\n    }\n\n    if (streamData.candidate) {\n      if (typeof streamData.candidate === \"string\") {\n        streamData.candidate = JSON.parse(streamData.candidate);\n      }\n\n      this.core.handleTargetStream({\n        Direction: \"Target\",\n        Type: 0,\n        data: streamData.candidate\n      });\n    }\n  } //I am aware that there is some repetition in the below 2 methods, \n  //Upon RTCFly v1 there will be a cleaner way of doing this and it will correctly return null\n\n  /**\n   * get the local video HTMLMediaElement\n   * @returns HTMLMediaElement | null\n   */\n\n\n  getLocalVideo() {\n    const localVideoWrapper = this.core.getLocalVideo();\n\n    if (localVideoWrapper !== undefined) {\n      const element = localVideoWrapper.getElement();\n      return element || null;\n    } else {\n      return null;\n    }\n  }\n  /**\n   * Set a value on the application State\n   * @param state object, a key and value ie {localMuted:true}\n   */\n\n\n  setState(stateObject) {\n    const oldState = this.state.get();\n    this.state.set(Object.assign({}, oldState, stateObject));\n  }\n  /**\n   * Get a state value by key \n   * @param key :string\n   * @returns any\n   */\n\n\n  getState(key) {\n    const state = this.state.get();\n    return state[key];\n  }\n  /**\n   * get the remote video HTMLMediaElement\n   * @returns HTMLMediaElement | null\n   */\n\n\n  getRemoteVideo() {\n    const remoteVideoWrapper = this.core.getRemoteVideo();\n\n    if (remoteVideoWrapper !== undefined) {\n      const element = remoteVideoWrapper.getElement();\n      return element || null;\n    } else {\n      return null;\n    }\n  }\n\n  toggleLocalAudio() {\n    const video = this.getLocalVideo();\n\n    if (video) {\n      video.srcObject.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n        this.setState({\n          localMuted: !track.enabled\n        });\n      });\n    }\n  }\n\n  toggleRemoteAudio() {\n    const video = this.getRemoteVideo();\n\n    if (video) {\n      video.srcObject.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n        this.setState({\n          remoteMuted: !track.enabled\n        });\n      });\n    }\n  }\n  /**\n   * Call allows you to call a remote user using their userId\n   * @param params {ICallParams}\n   */\n\n\n  call(params) {\n    this.core.call(params);\n  }\n  /**\n   * Handle the data stream for the caller\n   * @param streamData {string}\n   */\n\n\n  handleCallerStream(streamData) {\n    if (typeof streamData === 'string') {\n      streamData = JSON.parse(streamData);\n    }\n\n    if (streamData.candidate) {\n      if (typeof streamData.candidate === 'string') {\n        streamData.candidate = JSON.parse(streamData.candidate);\n      }\n\n      this.core.handleSenderStream({\n        Direction: \"Sender\",\n        Type: 0,\n        data: streamData.candidate\n      });\n    }\n\n    if (streamData.answer) {\n      const message = {\n        data: streamData.answer,\n        Direction: \"Sender\",\n        Type: 1\n      };\n      this.core.handleSenderStream(message);\n    }\n  }\n  /**\n   * Answer the call\n   * @param params {ICallParams}\n   */\n\n\n  answerCall(params) {\n    this.core.answerCall(params);\n    this.setState({\n      localMuted: false,\n      remoteMuted: false,\n      inProgress: true,\n      ringing: false\n    });\n  }\n  /**\n   * Reject the phone call\n   */\n\n\n  rejectCall() {\n    this.meteor.call(\"VideoCallServices/reject\", err => {\n      if (err) {\n        this.onError(err);\n      }\n\n      this.core.rejectCall();\n      this.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: false,\n        ringing: false\n      });\n    });\n  }\n  /**\n   * End the call\n   */\n\n\n  endCall() {\n    this.meteor.call(\"VideoCallServices/end\", err => {\n      if (err) {\n        this.onError(err);\n      }\n\n      this.terminateCall();\n    });\n  }\n  /**\n   * Initialize the local video chat client\n   * @param rtcConfiguration {RTCConfiguration}\n   * https://developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\n   */\n\n\n  init(rtcConfiguration) {\n    this.core.init(rtcConfiguration);\n  }\n\n  terminateCall() {\n    this.setState({\n      localMuted: false,\n      remoteMuted: false,\n      inProgress: false,\n      ringing: false\n    });\n    this.core.endCall();\n  }\n\n  onTargetAccept() {}\n\n  onReceiveCall(fields) {}\n\n  onTerminateCall() {}\n\n  onPeerConnectionCreated() {}\n\n  onCallRejected() {}\n\n  setOnError(callback) {\n    this.core.on('error', callback);\n  }\n\n  onError(err) {\n    this.core.events.callEvent(\"error\")(err);\n  }\n\n  onReceiveCall() {}\n\n}","map":{"version":3,"sources":["packages/elmarti:video-chat/lib/client.js"],"names":["module","export","VideoCallServices","streamHandlers","handleStreamCallSessionRemoved","callLog","terminateCall","handleStreamReceivingPhoneCall","msg","fields","_id","id","setCallLog","stream","Streamer","on","handleTargetStream","bind","setState","localMuted","remoteMuted","inProgress","ringing","onReceiveCall","caller","handleStreamCallOwnCallSessionInitialized","handleCallerStream","handleStreamCalleeAccept","status","meteor","userId","core","handleTargetAccept","onTargetAccept","handleStreamCalleeRejected","onCallRejected","call","handleStreamCallFinished","handleStreamUpdates","undefined","constructor","args","tracker","reactiveVar","ddp","state","autorun","sub","subscribe","handleStream","Object","assign","JSON","parse","collection","target","streamData","offer","Direction","Type","data","candidate","getLocalVideo","localVideoWrapper","element","getElement","stateObject","oldState","get","set","getState","key","getRemoteVideo","remoteVideoWrapper","toggleLocalAudio","video","srcObject","getAudioTracks","forEach","track","enabled","toggleRemoteAudio","params","handleSenderStream","answer","message","answerCall","rejectCall","err","onError","endCall","init","rtcConfiguration","onTerminateCall","onPeerConnectionCreated","setOnError","callback","events","callEvent"],"mappings":"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","sourcesContent":["const streamHandlers = {\n    handleStreamCallSessionRemoved() {\n        this.callLog = null;\n        this.terminateCall();\n    },\n    handleStreamReceivingPhoneCall(msg) {\n        msg.fields._id = msg.id;\n        this.setCallLog(msg.fields);\n        this.stream = new this.Streamer(msg.id);\n        this.stream.on('video_message', this.handleTargetStream.bind(this));\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: false,\n            ringing: true\n        });\n        this.onReceiveCall(this.callLog.caller);\n    },\n    handleStreamCallOwnCallSessionInitialized(msg) {\n        msg.fields._id = msg.id;\n        this.setCallLog(msg.fields);\n        this.stream = new this.Streamer(msg.id);\n        this.stream.on('video_message', this.handleCallerStream.bind(this));\n    },\n    handleStreamCalleeAccept(msg) {\n\n        if (msg.fields.status === 'ACCEPTED' &&\n            this.callLog.caller === this.meteor.userId()) {\n            this.setCallLog(msg.fields);\n            this.core.handleTargetAccept();\n            this.setState({\n                localMuted: false,\n                remoteMuted: false,\n                inProgress: true,\n                ringing: false\n            });\n            this.onTargetAccept();\n        }\n    },\n    handleStreamCalleeRejected(msg) {\n        if (msg.fields.status === 'REJECTED' && this.callLog.caller === this.meteor.userId()) {\n            this.setCallLog(msg.fields);\n            this.onCallRejected();\n            this.meteor.call(\"VideoCallServices/ackReject\", msg.id);\n        }\n    },\n    handleStreamCallFinished(msg) {\n        if (msg.fields.status === 'FINISHED') {\n            if (this.callLog.caller !== this.meteor.userId() || this.callLog.status !== \"REJECTED\") {\n                this.terminateCall();\n            }\n            this.callLog = null;\n        }\n    },\n    handleStreamUpdates(msg) {\n        if (msg.fields !== undefined) {\n            streamHandlers.handleStreamCalleeAccept.call(this, msg);\n            streamHandlers.handleStreamCalleeRejected.call(this, msg);\n            streamHandlers.handleStreamCallFinished.call(this, msg);\n        }\n    }\n};\n\n\n//jshint esversion: 6\nclass VideoCallServices {\n\n    constructor(args) {\n\n        let { meteor, tracker, core, reactiveVar, ddp, Streamer } = args;\n        this.meteor = meteor;\n        this.core = core;\n        this.ddp = ddp;\n        this.Streamer = Streamer;\n        this.state = new reactiveVar({\n            localMuted: false,\n            remoteMuted: false,\n            ringing: false,\n            inProgress: false\n        });\n\n\n        this.callLog = null;\n        tracker.autorun(() => {\n            this.sub = this.meteor.subscribe('VideoChatPublication');\n        });\n        this.ddp.on('message', this.handleStream.bind(this));\n\n\n    }\n    setCallLog(fields) {\n        this.callLog = Object.assign({}, this.callLog, fields);\n    }\n\n    /**\n     * Handle the Video chat specific data in the DDP stream\n     * @param msg {string}\n     */\n    handleStream(msg) {\n\n        msg = JSON.parse(msg);\n        if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'removed' && this.callLog !== null) {\n            streamHandlers.handleStreamCallSessionRemoved.call(this);\n        }\n        else if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'added' &&\n            msg.fields.target === this.meteor.userId() &&\n            msg.fields.status === \"NEW\") {\n            streamHandlers.handleStreamReceivingPhoneCall.call(this, msg);\n        }\n        else if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'added' &&\n            msg.fields.caller === this.meteor.userId() &&\n            msg.fields.status === 'NEW') {\n            streamHandlers.handleStreamCallOwnCallSessionInitialized.call(this, msg);\n        }\n        else if (msg.msg === 'changed' &&\n            msg.collection === 'VideoChatCallLog' &&\n            msg.fields !== undefined) {\n            streamHandlers.handleStreamUpdates.call(this, msg);\n        }\n    }\n\n    /**\n     * Handle the stream data for the target user\n     * @param streamData {string}\n     */\n    handleTargetStream(streamData) {\n        if (typeof streamData === \"string\") {\n            streamData = JSON.parse(streamData);\n        }\n        if (streamData.offer) {\n            this.core.handleTargetStream({\n                Direction: \"Target\",\n                Type: 1,\n                data: streamData.offer\n            });\n        }\n        if (streamData.candidate) {\n            if (typeof streamData.candidate === \"string\") {\n                streamData.candidate = JSON.parse(streamData.candidate);\n            }\n            this.core.handleTargetStream({\n                Direction: \"Target\",\n                Type: 0,\n                data: streamData.candidate\n            });\n\n        }\n    }\n\n\n    //I am aware that there is some repetition in the below 2 methods, \n    //Upon RTCFly v1 there will be a cleaner way of doing this and it will correctly return null\n\n\n    /**\n     * get the local video HTMLMediaElement\n     * @returns HTMLMediaElement | null\n     */\n    getLocalVideo() {\n        const localVideoWrapper = this.core.getLocalVideo();\n        if (localVideoWrapper !== undefined) {\n            const element = localVideoWrapper.getElement();\n            return element || null;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Set a value on the application State\n     * @param state object, a key and value ie {localMuted:true}\n     */\n    setState(stateObject) {\n        const oldState = this.state.get();\n        this.state.set(Object.assign({}, oldState, stateObject));\n    }\n\n    /**\n     * Get a state value by key \n     * @param key :string\n     * @returns any\n     */\n    getState(key) {\n        const state = this.state.get();\n        return state[key];\n    }\n    /**\n     * get the remote video HTMLMediaElement\n     * @returns HTMLMediaElement | null\n     */\n    getRemoteVideo() {\n        const remoteVideoWrapper = this.core.getRemoteVideo();\n        if (remoteVideoWrapper !== undefined) {\n            const element = remoteVideoWrapper.getElement();\n            return element || null;\n        }\n        else {\n            return null;\n        }\n    }\n\n    toggleLocalAudio() {\n        const video = this.getLocalVideo();\n        if (video) {\n            video.srcObject.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n                this.setState({\n                    localMuted: !track.enabled\n                });\n            });\n        }\n    }\n\n    toggleRemoteAudio() {\n        const video = this.getRemoteVideo();\n        if (video) {\n            video.srcObject.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n                this.setState({\n                    remoteMuted: !track.enabled\n                });\n            });\n        }\n    }\n\n\n    /**\n     * Call allows you to call a remote user using their userId\n     * @param params {ICallParams}\n     */\n    call(params) {\n        this.core.call(params);\n    }\n\n    /**\n     * Handle the data stream for the caller\n     * @param streamData {string}\n     */\n    handleCallerStream(streamData) {\n        if (typeof streamData === 'string') {\n            streamData = JSON.parse(streamData);\n        }\n\n        if (streamData.candidate) {\n            if (typeof streamData.candidate === 'string') {\n                streamData.candidate = JSON.parse(streamData.candidate);\n            }\n            this.core.handleSenderStream({\n                Direction: \"Sender\",\n                Type: 0,\n                data: streamData.candidate\n            });\n\n        }\n\n        if (streamData.answer) {\n            const message = {\n                data: streamData.answer,\n                Direction: \"Sender\",\n                Type: 1\n\n            };\n            this.core.handleSenderStream(message);\n        }\n    }\n\n    /**\n     * Answer the call\n     * @param params {ICallParams}\n     */\n    answerCall(params) {\n        this.core.answerCall(params);\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: true,\n            ringing: false\n        });\n    }\n    /**\n     * Reject the phone call\n     */\n    rejectCall() {\n        this.meteor.call(\"VideoCallServices/reject\", err => {\n            if (err) {\n                this.onError(err);\n            }\n            this.core.rejectCall();\n            this.setState({\n                localMuted: false,\n                remoteMuted: false,\n                inProgress: false,\n                ringing: false\n            });\n        });\n    }\n    /**\n     * End the call\n     */\n    endCall() {\n        this.meteor.call(\"VideoCallServices/end\", err => {\n            if (err) {\n                this.onError(err);\n            }\n            this.terminateCall();\n        });\n    }\n    /**\n     * Initialize the local video chat client\n     * @param rtcConfiguration {RTCConfiguration}\n     * https://developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\n     */\n    init(rtcConfiguration) {\n        this.core.init(rtcConfiguration);\n    }\n    terminateCall() {\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: false,\n            ringing: false\n        });\n        this.core.endCall();\n    }\n\n    onTargetAccept() {\n\n    }\n\n    onReceiveCall(fields) {\n\n    }\n\n    onTerminateCall() {\n\n    }\n    onPeerConnectionCreated() {\n\n    }\n    onCallRejected() {\n\n    }\n    setOnError(callback) {\n        this.core.on('error', callback);\n    }\n    onError(err) {\n        this.core.events.callEvent(\"error\")(err);\n    }\n    onReceiveCall() {\n\n    }\n\n\n}\n\nexport {\n    VideoCallServices\n};\n"]},"sourceType":"module","hash":"fe9c509b4e2ced7f879bc31fe801f8ad399f68e9"}
