{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/server.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/elmarti:video-chat/lib/server.js","filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/server.js","passPerPreset":false,"envName":"development","cwd":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","root":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/server.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/elmarti:video-chat/lib/server.js"}},"code":"module.export({\n  Services: () => Services\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 1);\nlet CallLog;\nmodule.link(\"./call_log\", {\n  default(v) {\n    CallLog = v;\n  }\n\n}, 2);\nconst streams = {};\nconst Services = {\n  setOnError(callback) {\n    this.onError = callback;\n  },\n\n  onError() {},\n\n  destroyOldCalls(meteorUser) {\n    CallLog.update({\n      $or: [{\n        status: {\n          $ne: \"FINISHED\"\n        },\n        caller: meteorUser._id\n      }, {\n        status: {\n          $ne: \"FINISHED\"\n        },\n        target: meteorUser._id\n      }]\n    }, {\n      $set: {\n        status: \"FINISHED\"\n      }\n    });\n  },\n\n  initializeCallSession(_id, meteorUser) {\n    Services.destroyOldCalls(meteorUser);\n    const logId = CallLog.insert({\n      status: \"NEW\",\n      target: _id,\n      caller: meteorUser._id,\n      callerConnectionId: this.connection.id\n    });\n    streams[logId] = new Meteor.Streamer(logId);\n    streams[logId].allowRead('all');\n    streams[logId].allowWrite('all');\n    return logId;\n  },\n\n  getUser() {\n    const meteorUser = Meteor.user();\n\n    if (!meteorUser) {\n      const err = new Meteor.Error(403, \"USER_NOT_LOGGED_IN\");\n      this.onError(err);\n      throw err;\n    }\n\n    return meteorUser;\n  },\n\n  /**\n   * Call allows you to call a remote user using their userId\n   * @param _id {string}\n   */\n  call(_id, idk) {\n    check(_id, String); //Asteroid sends null as a second param\n\n    check(idk, Match.Maybe(null));\n    const meteorUser = Services.getUser();\n\n    if (Services.checkConnect(meteorUser._id, _id)) {\n      const inCall = CallLog.findOne({\n        status: \"CONNECTED\",\n        target: _id\n      });\n\n      if (inCall) {\n        const err = new Meteor.Error(500, \"TARGET_IN_CALL\", inCall);\n        this.onError(err, inCall, Meteor.userId());\n        throw err;\n      } else {\n        return Services.initializeCallSession.call(this, _id, meteorUser);\n      }\n    } else {\n      Services.connectionNotAllowed(_id, meteorUser);\n    }\n  },\n\n  connectionNotAllowed(_id, meteorUser) {\n    throw new Meteor.Error(403, \"CONNECTION_NOT_ALLOWED\", {\n      target: meteorUser._id,\n      caller: _id\n    });\n  },\n\n  setCheckConnect(callback) {\n    this.checkConnect = callback;\n  },\n\n  /**\n   * Check if call connection should be permitted\n   * @param _id {caller}\n   * @param _id {target}\n   * @returns boolean\n   */\n  checkConnect(caller, target) {\n    return true;\n  },\n\n  /**\n   * Answer current phone call\n   */\n  answer() {\n    const user = Services.getUser();\n    const session = CallLog.findOne({\n      target: user._id,\n      status: 'NEW'\n    });\n\n    if (!session) {\n      const err = new Meteor.Error(500, 'SESSION_NOT_FOUND', {\n        target: user._id\n      });\n      this.onError(err, undefined, user);\n      throw err;\n    } else {\n      CallLog.update({\n        _id: session._id\n      }, {\n        $set: {\n          targetConnectionId: this.connection.id,\n          status: 'ACCEPTED'\n        }\n      });\n    }\n  },\n\n  /**\n   * End current phone call\n   */\n  end() {\n    const _id = Meteor.userId();\n\n    CallLog.find({\n      $or: [{\n        status: {\n          $ne: 'FINISHED'\n        },\n        target: _id\n      }, {\n        status: {\n          $ne: 'FINISHED'\n        },\n        caller: _id\n      }]\n    }).forEach(call => CallLog.update({\n      _id: call._id\n    }, {\n      $set: {\n        status: 'FINISHED'\n      }\n    }));\n  },\n\n  ackReject(id) {\n    check(id, String);\n    CallLog.update({\n      _id: id,\n      caller: Meteor.userId()\n    }, {\n      $set: {\n        status: \"FINISHED\"\n      }\n    });\n  },\n\n  reject() {\n    const user = Meteor.user();\n\n    if (user) {\n      CallLog.update({\n        target: user._id,\n        status: 'NEW'\n      }, {\n        $set: {\n          status: \"REJECTED\"\n        }\n      });\n    } else {\n      const newErr = new Meteor.Error(403, \"Could not find user\");\n      this.onError(newErr);\n      throw newErr;\n    }\n  }\n\n};","map":{"version":3,"sources":["packages/elmarti:video-chat/lib/server.js"],"names":["module","export","Services","Meteor","link","v","check","Match","CallLog","default","streams","setOnError","callback","onError","destroyOldCalls","meteorUser","update","$or","status","$ne","caller","_id","target","$set","initializeCallSession","logId","insert","callerConnectionId","connection","id","Streamer","allowRead","allowWrite","getUser","user","err","Error","call","idk","String","Maybe","checkConnect","inCall","findOne","userId","connectionNotAllowed","setCheckConnect","answer","session","undefined","targetConnectionId","end","find","forEach","ackReject","reject","newErr"],"mappings":"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","sourcesContent":["//jshint esversion: 6\nimport { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\nimport CallLog from './call_log';\n\nconst streams = {};\nconst Services = {\n    setOnError(callback){\n        this.onError = callback; \n    },\n    onError(){\n        \n    },\n    destroyOldCalls(meteorUser) {\n        CallLog.update({\n            $or: [{\n                status: {\n                    $ne: \"FINISHED\"\n                },\n                caller: meteorUser._id\n            }, {\n                status: {\n                    $ne: \"FINISHED\"\n                },\n                target: meteorUser._id\n            }]\n\n        }, {\n            $set: {\n                status: \"FINISHED\"\n            }\n        });\n    },\n    initializeCallSession(_id, meteorUser) {\n        Services.destroyOldCalls(meteorUser);\n        const logId = CallLog.insert({\n            status: \"NEW\",\n            target: _id,\n            caller: meteorUser._id,\n            callerConnectionId: this.connection.id\n        });\n        streams[logId] = new Meteor.Streamer(logId);\n        streams[logId].allowRead('all');\n        streams[logId].allowWrite('all');\n        return logId;\n    },\n    getUser(){\n        const meteorUser = Meteor.user();\n        if (!meteorUser) {\n            const err = new Meteor.Error(403, \"USER_NOT_LOGGED_IN\");\n            this.onError(err);\n            throw err;\n        }\n        return meteorUser;\n    },\n    /**\n     * Call allows you to call a remote user using their userId\n     * @param _id {string}\n     */\n    call(_id, idk) {\n        check(_id, String);\n        //Asteroid sends null as a second param\n        check(idk, Match.Maybe(null));\n        const meteorUser = Services.getUser();\n        if (Services.checkConnect(meteorUser._id, _id)) {\n            const inCall = CallLog.findOne({\n                status: \"CONNECTED\",\n                target: _id\n            });\n            if (inCall) {\n                const err = new Meteor.Error(500, \"TARGET_IN_CALL\", inCall);\n                this.onError(err, inCall, Meteor.userId());\n                throw err;\n            }\n            else {\n                return Services.initializeCallSession.call(this, _id, meteorUser);\n            }\n        }\n        else {\n            Services.connectionNotAllowed(_id, meteorUser);\n        }\n\n    },\n    connectionNotAllowed(_id, meteorUser) {\n        throw new Meteor.Error(403, \"CONNECTION_NOT_ALLOWED\", {\n            target: meteorUser._id,\n            caller: _id\n        });\n    },\n    setCheckConnect(callback){\n        this.checkConnect = callback; \n    },\n    /**\n     * Check if call connection should be permitted\n     * @param _id {caller}\n     * @param _id {target}\n     * @returns boolean\n     */\n    checkConnect(caller, target) {\n        return true;\n    },\n    /**\n     * Answer current phone call\n     */\n    answer() {\n        const user = Services.getUser();\n        const session = CallLog.findOne({\n            target: user._id,\n            status: 'NEW'\n        });\n        if (!session) {\n            const err = new Meteor.Error(500, 'SESSION_NOT_FOUND', {\n                target: user._id\n            });\n            this.onError(err, undefined, user);\n            throw err;\n        }\n\n        else {\n            CallLog.update({\n                _id: session._id\n            }, {\n                $set: {\n                    targetConnectionId: this.connection.id,\n                    status: 'ACCEPTED'\n                }\n            });\n        }\n    },\n    /**\n     * End current phone call\n     */\n    end() {\n        const _id = Meteor.userId();\n        CallLog.find({\n            $or: [{\n                status: {\n                    $ne: 'FINISHED'\n                },\n                target: _id\n            }, {\n                status: {\n                    $ne: 'FINISHED'\n                },\n                caller: _id\n            }]\n        }).forEach(call =>\n            CallLog.update({\n                _id: call._id\n            }, {\n                $set: {\n                    status: 'FINISHED'\n                }\n            }));\n    },\n    ackReject(id){\n        check(id, String)\n        CallLog.update({\n            _id: id,\n            caller: Meteor.userId()\n        }, {\n            $set: {\n                status: \"FINISHED\"\n            }\n        });\n    },\n    reject() {\n        const user = Meteor.user();\n        if (user) {\n            CallLog.update({\n                target: user._id,\n                status: 'NEW'\n            }, {\n                $set: {\n                    status: \"REJECTED\"\n                }\n            });\n        }\n        else {\n            const newErr = new Meteor.Error(403, \"Could not find user\");\n            this.onError(newErr);\n            throw newErr;\n        }\n    }\n};\n\nexport {\n    Services\n};\n"]},"sourceType":"module","hash":"cb1b4f4cf88fbee487460dc456792ff3241f9fef"}
