{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/elmarti:video-chat/lib/client.js","filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","passPerPreset":false,"envName":"development","cwd":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","root":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.9.2","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/marc/Escritorio/ETSETB/3B/SAD/SAD/videochat/videochat/packages/elmarti:video-chat/lib/client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/elmarti:video-chat/lib/client.js"}},"code":"module.export({\n  VideoCallServices: function () {\n    return VideoCallServices;\n  }\n});\nvar streamHandlers = {\n  handleStreamCallSessionRemoved: function () {\n    this.callLog = null;\n    this.terminateCall();\n  },\n  handleStreamReceivingPhoneCall: function (msg) {\n    msg.fields._id = msg.id;\n    this.setCallLog(msg.fields);\n    this.stream = new this.Streamer(msg.id);\n    this.stream.on('video_message', this.handleTargetStream.bind(this));\n    this.setState({\n      localMuted: false,\n      remoteMuted: false,\n      inProgress: false,\n      ringing: true\n    });\n    this.onReceiveCall(this.callLog.caller);\n  },\n  handleStreamCallOwnCallSessionInitialized: function (msg) {\n    msg.fields._id = msg.id;\n    this.setCallLog(msg.fields);\n    this.stream = new this.Streamer(msg.id);\n    this.stream.on('video_message', this.handleCallerStream.bind(this));\n  },\n  handleStreamCalleeAccept: function (msg) {\n    if (msg.fields.status === 'ACCEPTED' && this.callLog.caller === this.meteor.userId()) {\n      this.setCallLog(msg.fields);\n      this.core.handleTargetAccept();\n      this.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: true,\n        ringing: false\n      });\n      this.onTargetAccept();\n    }\n  },\n  handleStreamCalleeRejected: function (msg) {\n    if (msg.fields.status === 'REJECTED' && this.callLog.caller === this.meteor.userId()) {\n      this.setCallLog(msg.fields);\n      this.onCallRejected();\n      this.meteor.call(\"VideoCallServices/ackReject\", msg.id);\n    }\n  },\n  handleStreamCallFinished: function (msg) {\n    if (msg.fields.status === 'FINISHED') {\n      if (this.callLog.caller !== this.meteor.userId() || this.callLog.status !== \"REJECTED\") {\n        this.terminateCall();\n      }\n\n      this.callLog = null;\n    }\n  },\n  handleStreamUpdates: function (msg) {\n    if (msg.fields !== undefined) {\n      streamHandlers.handleStreamCalleeAccept.call(this, msg);\n      streamHandlers.handleStreamCalleeRejected.call(this, msg);\n      streamHandlers.handleStreamCallFinished.call(this, msg);\n    }\n  }\n}; //jshint esversion: 6\n\nvar VideoCallServices = /*#__PURE__*/function () {\n  function VideoCallServices(args) {\n    var _this = this;\n\n    var meteor = args.meteor,\n        tracker = args.tracker,\n        core = args.core,\n        reactiveVar = args.reactiveVar,\n        ddp = args.ddp,\n        Streamer = args.Streamer;\n    this.meteor = meteor;\n    this.core = core;\n    this.ddp = ddp;\n    this.Streamer = Streamer;\n    this.state = new reactiveVar({\n      localMuted: false,\n      remoteMuted: false,\n      ringing: false,\n      inProgress: false\n    });\n    this.callLog = null;\n    tracker.autorun(function () {\n      _this.sub = _this.meteor.subscribe('VideoChatPublication');\n    });\n    this.ddp.on('message', this.handleStream.bind(this));\n  }\n\n  var _proto = VideoCallServices.prototype;\n\n  _proto.setCallLog = function () {\n    function setCallLog(fields) {\n      this.callLog = Object.assign({}, this.callLog, fields);\n    }\n\n    return setCallLog;\n  }()\n  /**\n   * Handle the Video chat specific data in the DDP stream\n   * @param msg {string}\n   */\n  ;\n\n  _proto.handleStream = function () {\n    function handleStream(msg) {\n      msg = JSON.parse(msg);\n\n      if (msg.collection === 'VideoChatCallLog' && msg.msg === 'removed' && this.callLog !== null) {\n        streamHandlers.handleStreamCallSessionRemoved.call(this);\n      } else if (msg.collection === 'VideoChatCallLog' && msg.msg === 'added' && msg.fields.target === this.meteor.userId() && msg.fields.status === \"NEW\") {\n        streamHandlers.handleStreamReceivingPhoneCall.call(this, msg);\n      } else if (msg.collection === 'VideoChatCallLog' && msg.msg === 'added' && msg.fields.caller === this.meteor.userId() && msg.fields.status === 'NEW') {\n        streamHandlers.handleStreamCallOwnCallSessionInitialized.call(this, msg);\n      } else if (msg.msg === 'changed' && msg.collection === 'VideoChatCallLog' && msg.fields !== undefined) {\n        streamHandlers.handleStreamUpdates.call(this, msg);\n      }\n    }\n\n    return handleStream;\n  }()\n  /**\n   * Handle the stream data for the target user\n   * @param streamData {string}\n   */\n  ;\n\n  _proto.handleTargetStream = function () {\n    function handleTargetStream(streamData) {\n      if (typeof streamData === \"string\") {\n        streamData = JSON.parse(streamData);\n      }\n\n      if (streamData.offer) {\n        this.core.handleTargetStream({\n          Direction: \"Target\",\n          Type: 1,\n          data: streamData.offer\n        });\n      }\n\n      if (streamData.candidate) {\n        if (typeof streamData.candidate === \"string\") {\n          streamData.candidate = JSON.parse(streamData.candidate);\n        }\n\n        this.core.handleTargetStream({\n          Direction: \"Target\",\n          Type: 0,\n          data: streamData.candidate\n        });\n      }\n    }\n\n    return handleTargetStream;\n  }() //I am aware that there is some repetition in the below 2 methods, \n  //Upon RTCFly v1 there will be a cleaner way of doing this and it will correctly return null\n\n  /**\n   * get the local video HTMLMediaElement\n   * @returns HTMLMediaElement | null\n   */\n  ;\n\n  _proto.getLocalVideo = function () {\n    function getLocalVideo() {\n      var localVideoWrapper = this.core.getLocalVideo();\n\n      if (localVideoWrapper !== undefined) {\n        var element = localVideoWrapper.getElement();\n        return element || null;\n      } else {\n        return null;\n      }\n    }\n\n    return getLocalVideo;\n  }()\n  /**\n   * Set a value on the application State\n   * @param state object, a key and value ie {localMuted:true}\n   */\n  ;\n\n  _proto.setState = function () {\n    function setState(stateObject) {\n      var oldState = this.state.get();\n      this.state.set(Object.assign({}, oldState, stateObject));\n    }\n\n    return setState;\n  }()\n  /**\n   * Get a state value by key \n   * @param key :string\n   * @returns any\n   */\n  ;\n\n  _proto.getState = function () {\n    function getState(key) {\n      var state = this.state.get();\n      return state[key];\n    }\n\n    return getState;\n  }()\n  /**\n   * get the remote video HTMLMediaElement\n   * @returns HTMLMediaElement | null\n   */\n  ;\n\n  _proto.getRemoteVideo = function () {\n    function getRemoteVideo() {\n      var remoteVideoWrapper = this.core.getRemoteVideo();\n\n      if (remoteVideoWrapper !== undefined) {\n        var element = remoteVideoWrapper.getElement();\n        return element || null;\n      } else {\n        return null;\n      }\n    }\n\n    return getRemoteVideo;\n  }();\n\n  _proto.toggleLocalAudio = function () {\n    function toggleLocalAudio() {\n      var _this2 = this;\n\n      var video = this.getLocalVideo();\n\n      if (video) {\n        video.srcObject.getAudioTracks().forEach(function (track) {\n          track.enabled = !track.enabled;\n\n          _this2.setState({\n            localMuted: !track.enabled\n          });\n        });\n      }\n    }\n\n    return toggleLocalAudio;\n  }();\n\n  _proto.toggleRemoteAudio = function () {\n    function toggleRemoteAudio() {\n      var _this3 = this;\n\n      var video = this.getRemoteVideo();\n\n      if (video) {\n        video.srcObject.getAudioTracks().forEach(function (track) {\n          track.enabled = !track.enabled;\n\n          _this3.setState({\n            remoteMuted: !track.enabled\n          });\n        });\n      }\n    }\n\n    return toggleRemoteAudio;\n  }()\n  /**\n   * Call allows you to call a remote user using their userId\n   * @param params {ICallParams}\n   */\n  ;\n\n  _proto.call = function () {\n    function call(params) {\n      this.core.call(params);\n    }\n\n    return call;\n  }()\n  /**\n   * Handle the data stream for the caller\n   * @param streamData {string}\n   */\n  ;\n\n  _proto.handleCallerStream = function () {\n    function handleCallerStream(streamData) {\n      if (typeof streamData === 'string') {\n        streamData = JSON.parse(streamData);\n      }\n\n      if (streamData.candidate) {\n        if (typeof streamData.candidate === 'string') {\n          streamData.candidate = JSON.parse(streamData.candidate);\n        }\n\n        this.core.handleSenderStream({\n          Direction: \"Sender\",\n          Type: 0,\n          data: streamData.candidate\n        });\n      }\n\n      if (streamData.answer) {\n        var message = {\n          data: streamData.answer,\n          Direction: \"Sender\",\n          Type: 1\n        };\n        this.core.handleSenderStream(message);\n      }\n    }\n\n    return handleCallerStream;\n  }()\n  /**\n   * Answer the call\n   * @param params {ICallParams}\n   */\n  ;\n\n  _proto.answerCall = function () {\n    function answerCall(params) {\n      this.core.answerCall(params);\n      this.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: true,\n        ringing: false\n      });\n    }\n\n    return answerCall;\n  }()\n  /**\n   * Reject the phone call\n   */\n  ;\n\n  _proto.rejectCall = function () {\n    function rejectCall() {\n      var _this4 = this;\n\n      this.meteor.call(\"VideoCallServices/reject\", function (err) {\n        if (err) {\n          _this4.onError(err);\n        }\n\n        _this4.core.rejectCall();\n\n        _this4.setState({\n          localMuted: false,\n          remoteMuted: false,\n          inProgress: false,\n          ringing: false\n        });\n      });\n    }\n\n    return rejectCall;\n  }()\n  /**\n   * End the call\n   */\n  ;\n\n  _proto.endCall = function () {\n    function endCall() {\n      var _this5 = this;\n\n      this.meteor.call(\"VideoCallServices/end\", function (err) {\n        if (err) {\n          _this5.onError(err);\n        }\n\n        _this5.terminateCall();\n      });\n    }\n\n    return endCall;\n  }()\n  /**\n   * Initialize the local video chat client\n   * @param rtcConfiguration {RTCConfiguration}\n   * https://developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\n   */\n  ;\n\n  _proto.init = function () {\n    function init(rtcConfiguration) {\n      this.core.init(rtcConfiguration);\n    }\n\n    return init;\n  }();\n\n  _proto.terminateCall = function () {\n    function terminateCall() {\n      this.setState({\n        localMuted: false,\n        remoteMuted: false,\n        inProgress: false,\n        ringing: false\n      });\n      this.core.endCall();\n    }\n\n    return terminateCall;\n  }();\n\n  _proto.onTargetAccept = function () {\n    function onTargetAccept() {}\n\n    return onTargetAccept;\n  }();\n\n  _proto.onReceiveCall = function () {\n    function onReceiveCall(fields) {}\n\n    return onReceiveCall;\n  }();\n\n  _proto.onTerminateCall = function () {\n    function onTerminateCall() {}\n\n    return onTerminateCall;\n  }();\n\n  _proto.onPeerConnectionCreated = function () {\n    function onPeerConnectionCreated() {}\n\n    return onPeerConnectionCreated;\n  }();\n\n  _proto.onCallRejected = function () {\n    function onCallRejected() {}\n\n    return onCallRejected;\n  }();\n\n  _proto.setOnError = function () {\n    function setOnError(callback) {\n      this.core.on('error', callback);\n    }\n\n    return setOnError;\n  }();\n\n  _proto.onError = function () {\n    function onError(err) {\n      this.core.events.callEvent(\"error\")(err);\n    }\n\n    return onError;\n  }();\n\n  _proto.onReceiveCall = function () {\n    function onReceiveCall() {}\n\n    return onReceiveCall;\n  }();\n\n  return VideoCallServices;\n}();","map":{"version":3,"sources":["packages/elmarti:video-chat/lib/client.js"],"names":["module","export","VideoCallServices","streamHandlers","handleStreamCallSessionRemoved","callLog","terminateCall","handleStreamReceivingPhoneCall","msg","fields","_id","id","setCallLog","stream","Streamer","on","handleTargetStream","bind","setState","localMuted","remoteMuted","inProgress","ringing","onReceiveCall","caller","handleStreamCallOwnCallSessionInitialized","handleCallerStream","handleStreamCalleeAccept","status","meteor","userId","core","handleTargetAccept","onTargetAccept","handleStreamCalleeRejected","onCallRejected","call","handleStreamCallFinished","handleStreamUpdates","undefined","args","tracker","reactiveVar","ddp","state","autorun","sub","subscribe","handleStream","Object","assign","JSON","parse","collection","target","streamData","offer","Direction","Type","data","candidate","getLocalVideo","localVideoWrapper","element","getElement","stateObject","oldState","get","set","getState","key","getRemoteVideo","remoteVideoWrapper","toggleLocalAudio","video","srcObject","getAudioTracks","forEach","track","enabled","toggleRemoteAudio","params","handleSenderStream","answer","message","answerCall","rejectCall","err","onError","endCall","init","rtcConfiguration","onTerminateCall","onPeerConnectionCreated","setOnError","callback","events","callEvent"],"mappings":"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","sourcesContent":["const streamHandlers = {\n    handleStreamCallSessionRemoved() {\n        this.callLog = null;\n        this.terminateCall();\n    },\n    handleStreamReceivingPhoneCall(msg) {\n        msg.fields._id = msg.id;\n        this.setCallLog(msg.fields);\n        this.stream = new this.Streamer(msg.id);\n        this.stream.on('video_message', this.handleTargetStream.bind(this));\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: false,\n            ringing: true\n        });\n        this.onReceiveCall(this.callLog.caller);\n    },\n    handleStreamCallOwnCallSessionInitialized(msg) {\n        msg.fields._id = msg.id;\n        this.setCallLog(msg.fields);\n        this.stream = new this.Streamer(msg.id);\n        this.stream.on('video_message', this.handleCallerStream.bind(this));\n    },\n    handleStreamCalleeAccept(msg) {\n\n        if (msg.fields.status === 'ACCEPTED' &&\n            this.callLog.caller === this.meteor.userId()) {\n            this.setCallLog(msg.fields);\n            this.core.handleTargetAccept();\n            this.setState({\n                localMuted: false,\n                remoteMuted: false,\n                inProgress: true,\n                ringing: false\n            });\n            this.onTargetAccept();\n        }\n    },\n    handleStreamCalleeRejected(msg) {\n        if (msg.fields.status === 'REJECTED' && this.callLog.caller === this.meteor.userId()) {\n            this.setCallLog(msg.fields);\n            this.onCallRejected();\n            this.meteor.call(\"VideoCallServices/ackReject\", msg.id);\n        }\n    },\n    handleStreamCallFinished(msg) {\n        if (msg.fields.status === 'FINISHED') {\n            if (this.callLog.caller !== this.meteor.userId() || this.callLog.status !== \"REJECTED\") {\n                this.terminateCall();\n            }\n            this.callLog = null;\n        }\n    },\n    handleStreamUpdates(msg) {\n        if (msg.fields !== undefined) {\n            streamHandlers.handleStreamCalleeAccept.call(this, msg);\n            streamHandlers.handleStreamCalleeRejected.call(this, msg);\n            streamHandlers.handleStreamCallFinished.call(this, msg);\n        }\n    }\n};\n\n\n//jshint esversion: 6\nclass VideoCallServices {\n\n    constructor(args) {\n\n        let { meteor, tracker, core, reactiveVar, ddp, Streamer } = args;\n        this.meteor = meteor;\n        this.core = core;\n        this.ddp = ddp;\n        this.Streamer = Streamer;\n        this.state = new reactiveVar({\n            localMuted: false,\n            remoteMuted: false,\n            ringing: false,\n            inProgress: false\n        });\n\n\n        this.callLog = null;\n        tracker.autorun(() => {\n            this.sub = this.meteor.subscribe('VideoChatPublication');\n        });\n        this.ddp.on('message', this.handleStream.bind(this));\n\n\n    }\n    setCallLog(fields) {\n        this.callLog = Object.assign({}, this.callLog, fields);\n    }\n\n    /**\n     * Handle the Video chat specific data in the DDP stream\n     * @param msg {string}\n     */\n    handleStream(msg) {\n\n        msg = JSON.parse(msg);\n        if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'removed' && this.callLog !== null) {\n            streamHandlers.handleStreamCallSessionRemoved.call(this);\n        }\n        else if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'added' &&\n            msg.fields.target === this.meteor.userId() &&\n            msg.fields.status === \"NEW\") {\n            streamHandlers.handleStreamReceivingPhoneCall.call(this, msg);\n        }\n        else if (msg.collection === 'VideoChatCallLog' &&\n            msg.msg === 'added' &&\n            msg.fields.caller === this.meteor.userId() &&\n            msg.fields.status === 'NEW') {\n            streamHandlers.handleStreamCallOwnCallSessionInitialized.call(this, msg);\n        }\n        else if (msg.msg === 'changed' &&\n            msg.collection === 'VideoChatCallLog' &&\n            msg.fields !== undefined) {\n            streamHandlers.handleStreamUpdates.call(this, msg);\n        }\n    }\n\n    /**\n     * Handle the stream data for the target user\n     * @param streamData {string}\n     */\n    handleTargetStream(streamData) {\n        if (typeof streamData === \"string\") {\n            streamData = JSON.parse(streamData);\n        }\n        if (streamData.offer) {\n            this.core.handleTargetStream({\n                Direction: \"Target\",\n                Type: 1,\n                data: streamData.offer\n            });\n        }\n        if (streamData.candidate) {\n            if (typeof streamData.candidate === \"string\") {\n                streamData.candidate = JSON.parse(streamData.candidate);\n            }\n            this.core.handleTargetStream({\n                Direction: \"Target\",\n                Type: 0,\n                data: streamData.candidate\n            });\n\n        }\n    }\n\n\n    //I am aware that there is some repetition in the below 2 methods, \n    //Upon RTCFly v1 there will be a cleaner way of doing this and it will correctly return null\n\n\n    /**\n     * get the local video HTMLMediaElement\n     * @returns HTMLMediaElement | null\n     */\n    getLocalVideo() {\n        const localVideoWrapper = this.core.getLocalVideo();\n        if (localVideoWrapper !== undefined) {\n            const element = localVideoWrapper.getElement();\n            return element || null;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Set a value on the application State\n     * @param state object, a key and value ie {localMuted:true}\n     */\n    setState(stateObject) {\n        const oldState = this.state.get();\n        this.state.set(Object.assign({}, oldState, stateObject));\n    }\n\n    /**\n     * Get a state value by key \n     * @param key :string\n     * @returns any\n     */\n    getState(key) {\n        const state = this.state.get();\n        return state[key];\n    }\n    /**\n     * get the remote video HTMLMediaElement\n     * @returns HTMLMediaElement | null\n     */\n    getRemoteVideo() {\n        const remoteVideoWrapper = this.core.getRemoteVideo();\n        if (remoteVideoWrapper !== undefined) {\n            const element = remoteVideoWrapper.getElement();\n            return element || null;\n        }\n        else {\n            return null;\n        }\n    }\n\n    toggleLocalAudio() {\n        const video = this.getLocalVideo();\n        if (video) {\n            video.srcObject.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n                this.setState({\n                    localMuted: !track.enabled\n                });\n            });\n        }\n    }\n\n    toggleRemoteAudio() {\n        const video = this.getRemoteVideo();\n        if (video) {\n            video.srcObject.getAudioTracks().forEach(track => {\n                track.enabled = !track.enabled;\n                this.setState({\n                    remoteMuted: !track.enabled\n                });\n            });\n        }\n    }\n\n\n    /**\n     * Call allows you to call a remote user using their userId\n     * @param params {ICallParams}\n     */\n    call(params) {\n        this.core.call(params);\n    }\n\n    /**\n     * Handle the data stream for the caller\n     * @param streamData {string}\n     */\n    handleCallerStream(streamData) {\n        if (typeof streamData === 'string') {\n            streamData = JSON.parse(streamData);\n        }\n\n        if (streamData.candidate) {\n            if (typeof streamData.candidate === 'string') {\n                streamData.candidate = JSON.parse(streamData.candidate);\n            }\n            this.core.handleSenderStream({\n                Direction: \"Sender\",\n                Type: 0,\n                data: streamData.candidate\n            });\n\n        }\n\n        if (streamData.answer) {\n            const message = {\n                data: streamData.answer,\n                Direction: \"Sender\",\n                Type: 1\n\n            };\n            this.core.handleSenderStream(message);\n        }\n    }\n\n    /**\n     * Answer the call\n     * @param params {ICallParams}\n     */\n    answerCall(params) {\n        this.core.answerCall(params);\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: true,\n            ringing: false\n        });\n    }\n    /**\n     * Reject the phone call\n     */\n    rejectCall() {\n        this.meteor.call(\"VideoCallServices/reject\", err => {\n            if (err) {\n                this.onError(err);\n            }\n            this.core.rejectCall();\n            this.setState({\n                localMuted: false,\n                remoteMuted: false,\n                inProgress: false,\n                ringing: false\n            });\n        });\n    }\n    /**\n     * End the call\n     */\n    endCall() {\n        this.meteor.call(\"VideoCallServices/end\", err => {\n            if (err) {\n                this.onError(err);\n            }\n            this.terminateCall();\n        });\n    }\n    /**\n     * Initialize the local video chat client\n     * @param rtcConfiguration {RTCConfiguration}\n     * https://developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\n     */\n    init(rtcConfiguration) {\n        this.core.init(rtcConfiguration);\n    }\n    terminateCall() {\n        this.setState({\n            localMuted: false,\n            remoteMuted: false,\n            inProgress: false,\n            ringing: false\n        });\n        this.core.endCall();\n    }\n\n    onTargetAccept() {\n\n    }\n\n    onReceiveCall(fields) {\n\n    }\n\n    onTerminateCall() {\n\n    }\n    onPeerConnectionCreated() {\n\n    }\n    onCallRejected() {\n\n    }\n    setOnError(callback) {\n        this.core.on('error', callback);\n    }\n    onError(err) {\n        this.core.events.callEvent(\"error\")(err);\n    }\n    onReceiveCall() {\n\n    }\n\n\n}\n\nexport {\n    VideoCallServices\n};\n"]},"sourceType":"module","hash":"2ca90b77dc2fd1d9d0873dcf48037d94b9ab7a88"}
