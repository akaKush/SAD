{"version":3,"sources":["meteor://ðŸ’»app/packages/elmarti:video-chat/lib/publish.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/index.server.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/server.interface.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/call_log.js","meteor://ðŸ’»app/packages/elmarti:video-chat/lib/server.js"],"names":["Meteor","module","link","v","CallLog","default","publish","find","$or","caller","userId","status","target","callerConnectionId","connection","id","targetConnectionId","Services","users","observe","removed","_id","$ne","forEach","call","update","$set","methods","answer","end","reject","ackReject","export","VideoCallServices","checkConnect","callback","setCheckConnect","setOnError","exportDefault","Collection","check","Match","streams","onError","destroyOldCalls","meteorUser","initializeCallSession","logId","insert","Streamer","allowRead","allowWrite","getUser","user","err","Error","idk","String","Maybe","inCall","findOne","connectionNotAllowed","session","undefined","newErr"],"mappings":"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","file":"/packages/elmarti_video-chat.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport CallLog from './call_log';\nMeteor.publish('VideoChatPublication', function() {\n    return CallLog.find({\n        $or: [{\n            caller: this.userId,\n            status: \"NEW\"\n        }, {\n            target: this.userId,\n            status: \"NEW\"\n        }, {\n            callerConnectionId: this.connection.id,\n            status: \"ACCEPTED\"\n        }, {\n            targetConnectionId: this.connection.id,\n            status: \"ACCEPTED\"\n        }, {\n            targetConnectionId: this.connection.id,\n            status: \"REJECTED\"\n        }, {\n            callerConnectionId: this.connection.id,\n            status: \"REJECTED\"\n        }, {\n            callerConnectionId: this.connection.id,\n            status: \"CONNECTED\"\n        }, {\n            targetConnectionId: this.connection.id,\n            status: \"CONNECTED\"\n        }, {\n            callerConnectionId: this.connection.id,\n            status: \"FINISHED\"\n        }, {\n            targetConnectionId: this.connection.id,\n            status: \"FINISHED\"\n        }]\n    });\n});\n","import { Meteor } from 'meteor/meteor';\nimport {Services} from './server';\n\nimport CallLog from './call_log';\n\n\nMeteor.users.find({\"status.online\": true}).observe({\n    removed: function ({_id}) {\n        CallLog.find({\n            $or: [{\n                status: {\n                    $ne: 'FINISHED'\n                },\n                target: _id\n            }, {\n                status: {\n                    $ne: 'FINISHED'\n                },\n                caller: _id\n            }]\n        }).forEach(call =>\n            CallLog.update({\n                _id: call._id\n            }, {\n                $set: {\n                    status: 'FINISHED'\n                }\n            }));\n    }\n});\nMeteor.methods({\n    'VideoCallServices/call': Services.call,\n    'VideoCallServices/answer': Services.answer,\n    'VideoCallServices/end': Services.end,\n    'VideoCallServices/reject': Services.reject,\n    'VideoCallServices/ackReject': Services.ackReject\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Services } from './server';\n\nconst VideoCallServices = {\n  checkConnect(callback){\n      Services.setCheckConnect(callback);\n  },\n  setOnError(callback){\n      Services.setOnError(callback);\n  }\n};\nMeteor.VideoCallServices = VideoCallServices;\nexport {\n    VideoCallServices\n};","import { Meteor } from 'meteor/meteor';\n\nexport default new Meteor.Collection(\"VideoChatCallLog\");","//jshint esversion: 6\nimport { Meteor } from 'meteor/meteor';\nimport { check, Match } from 'meteor/check';\nimport CallLog from './call_log';\n\nconst streams = {};\nconst Services = {\n    setOnError(callback){\n        this.onError = callback; \n    },\n    onError(){\n        \n    },\n    destroyOldCalls(meteorUser) {\n        CallLog.update({\n            $or: [{\n                status: {\n                    $ne: \"FINISHED\"\n                },\n                caller: meteorUser._id\n            }, {\n                status: {\n                    $ne: \"FINISHED\"\n                },\n                target: meteorUser._id\n            }]\n\n        }, {\n            $set: {\n                status: \"FINISHED\"\n            }\n        });\n    },\n    initializeCallSession(_id, meteorUser) {\n        Services.destroyOldCalls(meteorUser);\n        const logId = CallLog.insert({\n            status: \"NEW\",\n            target: _id,\n            caller: meteorUser._id,\n            callerConnectionId: this.connection.id\n        });\n        streams[logId] = new Meteor.Streamer(logId);\n        streams[logId].allowRead('all');\n        streams[logId].allowWrite('all');\n        return logId;\n    },\n    getUser(){\n        const meteorUser = Meteor.user();\n        if (!meteorUser) {\n            const err = new Meteor.Error(403, \"USER_NOT_LOGGED_IN\");\n            this.onError(err);\n            throw err;\n        }\n        return meteorUser;\n    },\n    /**\n     * Call allows you to call a remote user using their userId\n     * @param _id {string}\n     */\n    call(_id, idk) {\n        check(_id, String);\n        //Asteroid sends null as a second param\n        check(idk, Match.Maybe(null));\n        const meteorUser = Services.getUser();\n        if (Services.checkConnect(meteorUser._id, _id)) {\n            const inCall = CallLog.findOne({\n                status: \"CONNECTED\",\n                target: _id\n            });\n            if (inCall) {\n                const err = new Meteor.Error(500, \"TARGET_IN_CALL\", inCall);\n                this.onError(err, inCall, Meteor.userId());\n                throw err;\n            }\n            else {\n                return Services.initializeCallSession.call(this, _id, meteorUser);\n            }\n        }\n        else {\n            Services.connectionNotAllowed(_id, meteorUser);\n        }\n\n    },\n    connectionNotAllowed(_id, meteorUser) {\n        throw new Meteor.Error(403, \"CONNECTION_NOT_ALLOWED\", {\n            target: meteorUser._id,\n            caller: _id\n        });\n    },\n    setCheckConnect(callback){\n        this.checkConnect = callback; \n    },\n    /**\n     * Check if call connection should be permitted\n     * @param _id {caller}\n     * @param _id {target}\n     * @returns boolean\n     */\n    checkConnect(caller, target) {\n        return true;\n    },\n    /**\n     * Answer current phone call\n     */\n    answer() {\n        const user = Services.getUser();\n        const session = CallLog.findOne({\n            target: user._id,\n            status: 'NEW'\n        });\n        if (!session) {\n            const err = new Meteor.Error(500, 'SESSION_NOT_FOUND', {\n                target: user._id\n            });\n            this.onError(err, undefined, user);\n            throw err;\n        }\n\n        else {\n            CallLog.update({\n                _id: session._id\n            }, {\n                $set: {\n                    targetConnectionId: this.connection.id,\n                    status: 'ACCEPTED'\n                }\n            });\n        }\n    },\n    /**\n     * End current phone call\n     */\n    end() {\n        const _id = Meteor.userId();\n        CallLog.find({\n            $or: [{\n                status: {\n                    $ne: 'FINISHED'\n                },\n                target: _id\n            }, {\n                status: {\n                    $ne: 'FINISHED'\n                },\n                caller: _id\n            }]\n        }).forEach(call =>\n            CallLog.update({\n                _id: call._id\n            }, {\n                $set: {\n                    status: 'FINISHED'\n                }\n            }));\n    },\n    ackReject(id){\n        check(id, String)\n        CallLog.update({\n            _id: id,\n            caller: Meteor.userId()\n        }, {\n            $set: {\n                status: \"FINISHED\"\n            }\n        });\n    },\n    reject() {\n        const user = Meteor.user();\n        if (user) {\n            CallLog.update({\n                target: user._id,\n                status: 'NEW'\n            }, {\n                $set: {\n                    status: \"REJECTED\"\n                }\n            });\n        }\n        else {\n            const newErr = new Meteor.Error(403, \"Could not find user\");\n            this.onError(newErr);\n            throw newErr;\n        }\n    }\n};\n\nexport {\n    Services\n};\n"]}