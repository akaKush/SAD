[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"react-meteor-data\":{\"index.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/react-meteor-data/index.js                                                                      //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nvar React;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nmodule.link(\"./useTracker\", {\n  \"default\": \"useTracker\"\n}, 1);\nmodule.link(\"./withTracker.tsx\", {\n  \"default\": \"withTracker\"\n}, 2);\n\nif (Meteor.isDevelopment) {\n  var v = React.version.split('.');\n\n  if (v[0] < 16 || v[0] == 16 && v[1] < 8) {\n    console.warn('react-meteor-data 2.x requires React version >= 16.8.');\n  }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"useTracker.ts\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/react-meteor-data/useTracker.ts                                                                 //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nvar _slicedToArray;\n\nmodule.link(\"@babel/runtime/helpers/slicedToArray\", {\n  default: function (v) {\n    _slicedToArray = v;\n  }\n}, 0);\n\nvar _typeof;\n\nmodule.link(\"@babel/runtime/helpers/typeof\", {\n  default: function (v) {\n    _typeof = v;\n  }\n}, 1);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar useReducer, useEffect, useRef, useMemo;\nmodule.link(\"react\", {\n  useReducer: function (v) {\n    useReducer = v;\n  },\n  useEffect: function (v) {\n    useEffect = v;\n  },\n  useRef: function (v) {\n    useRef = v;\n  },\n  useMemo: function (v) {\n    useMemo = v;\n  }\n}, 2);\n\n// Warns if data is a Mongo.Cursor or a POJO containing a Mongo.Cursor.\nfunction checkCursor(data) {\n  var shouldWarn = false;\n\n  if (Package.mongo && Package.mongo.Mongo && data && _typeof(data) === 'object') {\n    if (data instanceof Package.mongo.Mongo.Cursor) {\n      shouldWarn = true;\n    } else if (Object.getPrototypeOf(data) === Object.prototype) {\n      Object.keys(data).forEach(function (key) {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          shouldWarn = true;\n        }\n      });\n    }\n  }\n\n  if (shouldWarn) {\n    console.warn('Warning: your reactive function is returning a Mongo cursor. ' + 'This value will not be reactive. You probably want to call ' + '`.fetch()` on the cursor before returning it.');\n  }\n} // Used to create a forceUpdate from useReducer. Forces update by\n// incrementing a number whenever the dispatch method is invoked.\n\n\nvar fur = function (x) {\n  return x + 1;\n};\n\nvar useForceUpdate = function () {\n  var _useReducer = useReducer(fur, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      forceUpdate = _useReducer2[1];\n\n  return forceUpdate;\n}; // The follow functions were hoisted out of the closure to reduce allocations.\n// Since they no longer have access to the local vars, we pass them in and mutate here.\n\n\nvar dispose = function (refs) {\n  if (refs.computationCleanup) {\n    refs.computationCleanup();\n    delete refs.computationCleanup;\n  }\n\n  if (refs.computation) {\n    refs.computation.stop();\n    refs.computation = null;\n  }\n};\n\nvar runReactiveFn = Meteor.isDevelopment ? function (refs, c) {\n  var data = refs.reactiveFn(c);\n  checkCursor(data);\n  refs.trackerData = data;\n} : function (refs, c) {\n  refs.trackerData = refs.reactiveFn(c);\n};\n\nvar clear = function (refs) {\n  if (refs.disposeId) {\n    clearTimeout(refs.disposeId);\n    delete refs.disposeId;\n  }\n};\n\nvar track = function (refs, forceUpdate, trackedFn) {\n  // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n  // This can happen if someone calls `ReactDOM.render` inside a Computation.\n  // In that case, we want to opt out of the normal behavior of nested\n  // Computations, where if the outer one is invalidated or stopped,\n  // it stops the inner one.\n  Tracker.nonreactive(function () {\n    return Tracker.autorun(function (c) {\n      refs.computation = c;\n      trackedFn(c, refs, forceUpdate);\n    });\n  });\n};\n\nvar doFirstRun = function (refs, c) {\n  // If there is a computationHandler, pass it the computation, and store the\n  // result, which may be a cleanup method.\n  if (refs.computationHandler) {\n    var cleanupHandler = refs.computationHandler(c);\n\n    if (cleanupHandler) {\n      if (Meteor.isDevelopment && typeof cleanupHandler !== 'function') {\n        console.warn('Warning: Computation handler should return a function ' + 'to be used for cleanup or return nothing.');\n      }\n\n      refs.computationCleanup = cleanupHandler;\n    }\n  } // Always run the reactiveFn on firstRun\n\n\n  runReactiveFn(refs, c);\n};\n\nvar tracked = function (c, refs, forceUpdate) {\n  if (c.firstRun) {\n    doFirstRun(refs, c);\n  } else {\n    if (refs.isMounted) {\n      // Only run the reactiveFn if the component is mounted.\n      runReactiveFn(refs, c);\n      forceUpdate();\n    } else {\n      // If we got here, then a reactive update happened before the render was\n      // committed - before useEffect has run. We don't want to run the reactiveFn\n      // while we are not sure this render will be committed, so we'll dispose of the\n      // computation, and set everything up to be restarted in useEffect if needed.\n      // NOTE: If we don't run the user's reactiveFn when a computation updates, we'll\n      // leave the computation in a non-reactive state - so we need to dispose here\n      // and let useEffect recreate the computation later.\n      dispose(refs); // Might as well clear the timeout!\n\n      clear(refs);\n    }\n  }\n};\n\nvar useTrackerNoDeps = function (reactiveFn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var computationHandler = arguments.length > 2 ? arguments[2] : undefined;\n\n  var _useRef = useRef({\n    reactiveFn: reactiveFn,\n    isMounted: false,\n    trackerData: null\n  }),\n      refs = _useRef.current;\n\n  var forceUpdate = useForceUpdate();\n  refs.reactiveFn = reactiveFn;\n\n  if (computationHandler) {\n    refs.computationHandler = computationHandler;\n  } // Without deps, always dispose and recreate the computation with every render.\n\n\n  dispose(refs);\n  track(refs, forceUpdate, function (c) {\n    if (c.firstRun) {\n      doFirstRun(refs, c);\n    } else {\n      // For any reactive change, forceUpdate and let the next render rebuild the computation.\n      forceUpdate();\n    }\n  }); // To avoid creating side effects in render with Tracker when not using deps\n  // create the computation, run the user's reactive function in a computation synchronously,\n  // then immediately dispose of it. It'll be recreated again after the render is committed.\n\n  if (!refs.isMounted) {\n    // We want to forceUpdate in useEffect to support StrictMode.\n    // See: https://github.com/meteor/react-packages/issues/278\n    dispose(refs);\n  }\n\n  useEffect(function () {\n    // Let subsequent renders know we are mounted (render is comitted).\n    refs.isMounted = true; // Render is committed. Since useTracker without deps always runs synchronously,\n    // forceUpdate and let the next render recreate the computation.\n\n    forceUpdate(); // stop the computation on unmount\n\n    return function () {\n      return dispose(refs);\n    };\n  }, []);\n  return refs.trackerData;\n};\n\nvar useTrackerWithDeps = function (reactiveFn, deps, computationHandler) {\n  var _useRef2 = useRef({\n    reactiveFn: reactiveFn,\n    isMounted: false,\n    trackerData: null\n  }),\n      refs = _useRef2.current;\n\n  var forceUpdate = useForceUpdate(); // Always have up to date deps and computations in all contexts\n\n  refs.reactiveFn = reactiveFn;\n  refs.deps = deps;\n\n  if (computationHandler) {\n    refs.computationHandler = computationHandler;\n  } // We are abusing useMemo a little bit, using it for it's deps\n  // compare, but not for it's memoization.\n\n\n  useMemo(function () {\n    // stop the old one.\n    dispose(refs);\n    track(refs, forceUpdate, tracked); // Tracker creates side effect in render, which can be problematic in some cases, such as\n    // Suspense or concurrent rendering or if an error is thrown and handled by an error boundary.\n    // We still want synchronous rendering for a number of reasons (see readme). useTracker works\n    // around memory/resource leaks by setting a time out to automatically clean everything up,\n    // and watching a set of references to make sure everything is choreographed correctly.\n\n    if (!refs.isMounted) {\n      // Components yield to allow the DOM to update and the browser to paint before useEffect\n      // is run. In concurrent mode this can take quite a long time. 1000ms should be enough\n      // in most cases.\n      refs.disposeId = setTimeout(function () {\n        if (!refs.isMounted) {\n          dispose(refs);\n        }\n      }, 1000);\n    }\n  }, deps);\n  useEffect(function () {\n    refs.isMounted = true; // Render is committed, clear the dispose timeout\n\n    clear(refs); // If it took longer than 1000ms to get to useEffect, or a reactive update happened\n    // before useEffect, restart the computation and forceUpdate.\n\n    if (!refs.computation) {\n      // This also runs runReactiveFn\n      track(refs, forceUpdate, tracked);\n      forceUpdate();\n    } // stop the computation on unmount\n\n\n    return function () {\n      return dispose(refs);\n    };\n  }, []);\n  return refs.trackerData;\n};\n\nvar useTrackerClient = function (reactiveFn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var computationHandler = arguments.length > 2 ? arguments[2] : undefined;\n  return deps === null || deps === undefined || !Array.isArray(deps) ? useTrackerNoDeps(reactiveFn, deps, computationHandler) : useTrackerWithDeps(reactiveFn, deps, computationHandler);\n};\n\nvar useTrackerServer = function (reactiveFn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var computationHandler = arguments.length > 2 ? arguments[2] : undefined;\n  return Tracker.nonreactive(reactiveFn);\n}; // When rendering on the server, we don't want to use the Tracker.\n// We only do the first rendering on the server so we can get the data right away\n\n\nvar useTracker = Meteor.isServer ? useTrackerServer : useTrackerClient;\n\nvar useTrackerDev = function (reactiveFn) {\n  var deps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var computationHandler = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof reactiveFn !== 'function') {\n    console.warn('Warning: useTracker expected a function in it\\'s first argument ' + (\"(reactiveFn), but got type of \" + _typeof(reactiveFn) + \".\"));\n  }\n\n  if (deps && !Array.isArray(deps)) {\n    console.warn('Warning: useTracker expected an array in it\\'s second argument ' + (\"(dependency), but got type of \" + _typeof(deps) + \".\"));\n  }\n\n  if (computationHandler && typeof computationHandler !== 'function') {\n    console.warn('Warning: useTracker expected a function in it\\'s third argument' + (\"(computationHandler), but got type of \" + _typeof(computationHandler) + \".\"));\n  }\n\n  return useTracker(reactiveFn, deps, computationHandler);\n};\n\nmodule.exportDefault(Meteor.isDevelopment ? useTrackerDev : useTracker);\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"withTracker.tsx\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                          //\n// packages/react-meteor-data/withTracker.tsx                                                               //\n//                                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                            //\nvar _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default: function (v) {\n    _extends = v;\n  }\n}, 0);\nmodule.export({\n  \"default\": function () {\n    return withTracker;\n  }\n});\nvar React, forwardRef, memo;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  forwardRef: function (v) {\n    forwardRef = v;\n  },\n  memo: function (v) {\n    memo = v;\n  }\n}, 0);\nvar useTracker;\nmodule.link(\"./useTracker\", {\n  \"default\": function (v) {\n    useTracker = v;\n  }\n}, 1);\n\nfunction withTracker(options) {\n  return function (Component) {\n    var getMeteorData = typeof options === 'function' ? options : options.getMeteorData;\n    var WithTracker = forwardRef(function (props, ref) {\n      var data = useTracker(function () {\n        return getMeteorData(props) || {};\n      });\n      return /*#__PURE__*/React.createElement(Component, _extends({\n        ref: ref\n      }, props, data));\n    }); // @ts-ignore\n\n    var _options$pure = options.pure,\n        pure = _options$pure === void 0 ? true : _options$pure;\n    return pure ? memo(WithTracker) : WithTracker;\n  };\n}\n\n;\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".tsx\"\n  ]\n});\n\n\n/* Exports */\nPackage._define(\"react-meteor-data\");\n\n})();\n","servePath":"/packages/react-meteor-data.js","sourceMap":{"version":3,"sources":["packages/react-meteor-data/index.js","packages/react-meteor-data/useTracker.ts","packages/react-meteor-data/withTracker.tsx"],"names":["React","module","link","v","Meteor","isDevelopment","version","split","console","warn"],"mappings":"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","file":"/packages/react-meteor-data.js","sourcesContent":["/* global Meteor*/\nimport React from 'react';\n\nif (Meteor.isDevelopment) {\n  const v = React.version.split('.');\n  if (v[0] < 16 || (v[0] == 16 && v[1] < 8)) {\n    console.warn('react-meteor-data 2.x requires React version >= 16.8.');\n  }\n}\n\nexport { default as useTracker } from './useTracker';\nexport { default as withTracker } from './withTracker.tsx';\n","declare var Package: any\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\nimport { useReducer, useEffect, useRef, useMemo } from 'react';\n\n// Warns if data is a Mongo.Cursor or a POJO containing a Mongo.Cursor.\nfunction checkCursor(data: any): void {\n  let shouldWarn = false;\n  if (Package.mongo && Package.mongo.Mongo && data && typeof data === 'object') {\n    if (data instanceof Package.mongo.Mongo.Cursor) {\n      shouldWarn = true;\n    } else if (Object.getPrototypeOf(data) === Object.prototype) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          shouldWarn = true;\n        }\n      });\n    }\n  }\n  if (shouldWarn) {\n    console.warn(\n      'Warning: your reactive function is returning a Mongo cursor. '\n      + 'This value will not be reactive. You probably want to call '\n      + '`.fetch()` on the cursor before returning it.'\n    );\n  }\n}\n\n// Used to create a forceUpdate from useReducer. Forces update by\n// incrementing a number whenever the dispatch method is invoked.\nconst fur = (x: number): number => x + 1;\nconst useForceUpdate = (): CallableFunction => {\n  const [, forceUpdate] = useReducer(fur, 0);\n  return forceUpdate;\n}\n\ntype ReactiveFn = (c?: Tracker.Computation) => any;\ntype ComputationHandler = (c: Tracker.Computation) => () => void | void;\ntype TrackerRefs = {\n  reactiveFn: ReactiveFn;\n  computationHandler?: ComputationHandler;\n  deps?: Array<any>;\n  computation?: Tracker.Computation;\n  isMounted: boolean;\n  disposeId?: ReturnType<typeof setTimeout>;\n  trackerData: any;\n  computationCleanup?: () => void;\n  trackerCount?: number\n}\n\n// The follow functions were hoisted out of the closure to reduce allocations.\n// Since they no longer have access to the local vars, we pass them in and mutate here.\nconst dispose = (refs: TrackerRefs): void => {\n  if (refs.computationCleanup) {\n    refs.computationCleanup();\n    delete refs.computationCleanup;\n  }\n  if (refs.computation) {\n    refs.computation.stop();\n    refs.computation = null;\n  }\n};\n\nconst runReactiveFn = Meteor.isDevelopment\n  ? (refs: TrackerRefs, c: Tracker.Computation): void => {\n    const data = refs.reactiveFn(c);\n    checkCursor(data);\n    refs.trackerData = data;\n  }\n  : (refs: TrackerRefs, c: Tracker.Computation): void => {\n    refs.trackerData = refs.reactiveFn(c);\n  };\n\nconst clear = (refs: TrackerRefs): void => {\n  if (refs.disposeId) {\n    clearTimeout(refs.disposeId);\n    delete refs.disposeId;\n  }\n};\n\nconst track = (refs: TrackerRefs, forceUpdate: Function, trackedFn: Function): void => {\n  // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n  // This can happen if someone calls `ReactDOM.render` inside a Computation.\n  // In that case, we want to opt out of the normal behavior of nested\n  // Computations, where if the outer one is invalidated or stopped,\n  // it stops the inner one.\n  Tracker.nonreactive(() => Tracker.autorun((c: Tracker.Computation) => {\n    refs.computation = c;\n    trackedFn(c, refs, forceUpdate);\n  }));\n};\n\nconst doFirstRun = (refs: TrackerRefs, c: Tracker.Computation): void => {\n  // If there is a computationHandler, pass it the computation, and store the\n  // result, which may be a cleanup method.\n  if (refs.computationHandler) {\n    const cleanupHandler = refs.computationHandler(c);\n    if (cleanupHandler) {\n      if (Meteor.isDevelopment && typeof cleanupHandler !== 'function') {\n        console.warn(\n          'Warning: Computation handler should return a function '\n          + 'to be used for cleanup or return nothing.'\n        );\n      }\n      refs.computationCleanup = cleanupHandler;\n    }\n  }\n  // Always run the reactiveFn on firstRun\n  runReactiveFn(refs, c);\n}\n\nconst tracked = (c: Tracker.Computation, refs: TrackerRefs, forceUpdate: Function): void => {\n  if (c.firstRun) {\n    doFirstRun(refs, c);\n  } else {\n    if (refs.isMounted) {\n      // Only run the reactiveFn if the component is mounted.\n      runReactiveFn(refs, c);\n      forceUpdate();\n    } else {\n      // If we got here, then a reactive update happened before the render was\n      // committed - before useEffect has run. We don't want to run the reactiveFn\n      // while we are not sure this render will be committed, so we'll dispose of the\n      // computation, and set everything up to be restarted in useEffect if needed.\n      // NOTE: If we don't run the user's reactiveFn when a computation updates, we'll\n      // leave the computation in a non-reactive state - so we need to dispose here\n      // and let useEffect recreate the computation later.\n      dispose(refs);\n      // Might as well clear the timeout!\n      clear(refs);\n    }\n  }\n};\n\ninterface useTrackerSignature {\n  (reactiveFn: ReactiveFn, deps?: null | Array<any>, computationHandler?: ComputationHandler): any\n}\n\nconst useTrackerNoDeps: useTrackerSignature = (reactiveFn, deps = null, computationHandler) => {\n  const { current: refs } = useRef<TrackerRefs>({\n    reactiveFn,\n    isMounted: false,\n    trackerData: null\n  });\n  const forceUpdate = useForceUpdate();\n\n  refs.reactiveFn = reactiveFn;\n  if (computationHandler) {\n    refs.computationHandler = computationHandler;\n  }\n\n  // Without deps, always dispose and recreate the computation with every render.\n  dispose(refs);\n  track(refs, forceUpdate, (c: Tracker.Computation) => {\n    if (c.firstRun) {\n      doFirstRun(refs, c);\n    } else {\n      // For any reactive change, forceUpdate and let the next render rebuild the computation.\n      forceUpdate();\n    }\n  });\n\n  // To avoid creating side effects in render with Tracker when not using deps\n  // create the computation, run the user's reactive function in a computation synchronously,\n  // then immediately dispose of it. It'll be recreated again after the render is committed.\n  if (!refs.isMounted) {\n    // We want to forceUpdate in useEffect to support StrictMode.\n    // See: https://github.com/meteor/react-packages/issues/278\n    dispose(refs);\n  }\n\n  useEffect(() => {\n    // Let subsequent renders know we are mounted (render is comitted).\n    refs.isMounted = true;\n\n    // Render is committed. Since useTracker without deps always runs synchronously,\n    // forceUpdate and let the next render recreate the computation.\n    forceUpdate();\n\n    // stop the computation on unmount\n    return () => dispose(refs);\n  }, []);\n\n  return refs.trackerData;\n}\n\nconst useTrackerWithDeps: useTrackerSignature = (reactiveFn, deps: Array<any>, computationHandler) => {\n  const { current: refs } = useRef<TrackerRefs>({\n    reactiveFn,\n    isMounted: false,\n    trackerData: null\n  });\n  const forceUpdate = useForceUpdate();\n\n  // Always have up to date deps and computations in all contexts\n  refs.reactiveFn = reactiveFn;\n  refs.deps = deps;\n  if (computationHandler) {\n    refs.computationHandler = computationHandler;\n  }\n\n  // We are abusing useMemo a little bit, using it for it's deps\n  // compare, but not for it's memoization.\n  useMemo(() => {\n    // stop the old one.\n    dispose(refs);\n\n    track(refs, forceUpdate, tracked)\n\n    // Tracker creates side effect in render, which can be problematic in some cases, such as\n    // Suspense or concurrent rendering or if an error is thrown and handled by an error boundary.\n    // We still want synchronous rendering for a number of reasons (see readme). useTracker works\n    // around memory/resource leaks by setting a time out to automatically clean everything up,\n    // and watching a set of references to make sure everything is choreographed correctly.\n    if (!refs.isMounted) {\n      // Components yield to allow the DOM to update and the browser to paint before useEffect\n      // is run. In concurrent mode this can take quite a long time. 1000ms should be enough\n      // in most cases.\n      refs.disposeId = setTimeout(() => {\n        if (!refs.isMounted) {\n          dispose(refs);\n        }\n      }, 1000);\n    }\n  }, deps);\n\n  useEffect(() => {\n    refs.isMounted = true;\n\n    // Render is committed, clear the dispose timeout\n    clear(refs);\n\n    // If it took longer than 1000ms to get to useEffect, or a reactive update happened\n    // before useEffect, restart the computation and forceUpdate.\n    if (!refs.computation) {\n      // This also runs runReactiveFn\n      track(refs, forceUpdate, tracked);\n      forceUpdate();\n    }\n\n    // stop the computation on unmount\n    return () => dispose(refs);\n  }, []);\n\n  return refs.trackerData;\n}\n\nconst useTrackerClient: useTrackerSignature = (reactiveFn, deps = null, computationHandler) =>\n  (deps === null || deps === undefined || !Array.isArray(deps))\n    ? useTrackerNoDeps(reactiveFn, deps, computationHandler)\n    : useTrackerWithDeps(reactiveFn, deps, computationHandler);\n\nconst useTrackerServer: useTrackerSignature = (reactiveFn, deps = null, computationHandler) =>\n  Tracker.nonreactive(reactiveFn);\n\n// When rendering on the server, we don't want to use the Tracker.\n// We only do the first rendering on the server so we can get the data right away\nconst useTracker = Meteor.isServer\n  ? useTrackerServer\n  : useTrackerClient;\n\nconst useTrackerDev: useTrackerSignature = (reactiveFn, deps = null, computationHandler) => {\n  if (typeof reactiveFn !== 'function') {\n    console.warn(\n      'Warning: useTracker expected a function in it\\'s first argument '\n      + `(reactiveFn), but got type of ${typeof reactiveFn}.`\n    );\n  }\n  if (deps && !Array.isArray(deps)) {\n    console.warn(\n      'Warning: useTracker expected an array in it\\'s second argument '\n      + `(dependency), but got type of ${typeof deps}.`\n    );\n  }\n  if (computationHandler && typeof computationHandler !== 'function') {\n    console.warn(\n      'Warning: useTracker expected a function in it\\'s third argument'\n      + `(computationHandler), but got type of ${typeof computationHandler}.`\n    );\n  }\n  return useTracker(reactiveFn, deps, computationHandler);\n}\n\nexport default Meteor.isDevelopment\n  ? useTrackerDev\n  : useTracker;\n","import React, { forwardRef, memo } from 'react';\nimport useTracker from './useTracker';\n\ntype ReactiveFn = (props: object) => any;\ntype ReactiveOptions = {\n  getMeteorData: ReactiveFn;\n  pure?: boolean;\n}\n\nexport default function withTracker(options: ReactiveFn | ReactiveOptions) {\n  return (Component: React.ComponentType) => {\n    const getMeteorData = typeof options === 'function'\n      ? options\n      : options.getMeteorData;\n\n    const WithTracker = forwardRef((props, ref) => {\n      const data = useTracker(() => getMeteorData(props) || {});\n      return (\n        <Component ref={ref} {...props} {...data} />\n      );\n    });\n\n    // @ts-ignore\n    const { pure = true } = options;\n    return pure ? memo(WithTracker) : WithTracker;\n  }\n};\n"]}}]