[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"chat.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// imports/api/chat.js                                                               //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nmodule.export({\n  Chats: () => Chats\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Chats = new Mongo.Collection('chats');\n///////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"main.js\":function module(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////\n//                                                                                   //\n// server/main.js                                                                    //\n//                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////\n                                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Chats;\nmodule.link(\"/imports/api/chat.js\", {\n  Chats(v) {\n    Chats = v;\n  }\n\n}, 1);\n\nconst insertMessage = chatText => Chats.insert({\n  text: chatText\n});\n\nMeteor.startup(() => {\n  if (Chats.find().count() === 0) {\n    ['1r missatge', 'Second msg', 'Third msg', 'Fourth msg'].forEach(insertMessage);\n  }\n});\n///////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".jsx\",\n    \".mjs\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"0e29363ea6578c6282d408ead63e681cac270fcc","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/chat.js","server/main.js"],"names":["module","export","Chats","Mongo","link","v","Collection","Meteor","insertMessage","chatText","insert","text","startup","find","count","forEach"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,OAAK,EAAC,MAAIA;AAAX,CAAd;AAAiC,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAEpC,MAAMH,KAAK,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,OAArB,CAAd,C;;;;;;;;;;;ACFP,IAAIC,MAAJ;AAAWP,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACG,QAAM,CAACF,CAAD,EAAG;AAACE,UAAM,GAACF,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIH,KAAJ;AAAUF,MAAM,CAACI,IAAP,CAAY,sBAAZ,EAAmC;AAACF,OAAK,CAACG,CAAD,EAAG;AAACH,SAAK,GAACG,CAAN;AAAQ;;AAAlB,CAAnC,EAAuD,CAAvD;;AAG1E,MAAMG,aAAa,GAAGC,QAAQ,IAAIP,KAAK,CAACQ,MAAN,CAAa;AAAEC,MAAI,EAAEF;AAAR,CAAb,CAAlC;;AAEAF,MAAM,CAACK,OAAP,CAAe,MAAM;AACnB,MAAIV,KAAK,CAACW,IAAN,GAAaC,KAAb,OAAyB,CAA7B,EAAgC;AAC9B,KACE,aADF,EAEE,YAFF,EAGE,WAHF,EAIE,YAJF,EAKEC,OALF,CAKUP,aALV;AAMD;AACF,CATD,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n \nexport const Chats = new Mongo.Collection('chats');","import { Meteor } from 'meteor/meteor';\nimport { Chats } from '/imports/api/chat.js';\n\nconst insertMessage = chatText => Chats.insert({ text: chatText });\n \nMeteor.startup(() => {\n  if (Chats.find().count() === 0) {\n    [\n      '1r missatge',\n      'Second msg',\n      'Third msg',\n      'Fourth msg'\n    ].forEach(insertMessage)\n  }\n});"]}}]